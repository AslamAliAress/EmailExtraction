import Long from "long";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "ethermint.types.v1";
/** ExtensionOptionDynamicFeeTx is an extension option that specifies the maxPrioPrice for cosmos tx */
export interface ExtensionOptionDynamicFeeTx {
    /** max_priority_price is the same as `max_priority_fee_per_gas` in eip-1559 spec */
    maxPriorityPrice: string;
}
export declare const ExtensionOptionDynamicFeeTx: {
    encode(message: ExtensionOptionDynamicFeeTx, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ExtensionOptionDynamicFeeTx;
    fromJSON(object: any): ExtensionOptionDynamicFeeTx;
    toJSON(message: ExtensionOptionDynamicFeeTx): unknown;
    create(base?: DeepPartial<ExtensionOptionDynamicFeeTx>): ExtensionOptionDynamicFeeTx;
    fromPartial(object: DeepPartial<ExtensionOptionDynamicFeeTx>): ExtensionOptionDynamicFeeTx;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
