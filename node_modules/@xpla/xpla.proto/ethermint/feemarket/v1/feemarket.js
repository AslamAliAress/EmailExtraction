"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "ethermint.feemarket.v1";
function createBaseParams() {
    return {
        noBaseFee: false,
        baseFeeChangeDenominator: 0,
        elasticityMultiplier: 0,
        enableHeight: long_1.default.ZERO,
        baseFee: "",
        minGasPrice: "",
        minGasMultiplier: "",
    };
}
exports.Params = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.noBaseFee === true) {
            writer.uint32(8).bool(message.noBaseFee);
        }
        if (message.baseFeeChangeDenominator !== 0) {
            writer.uint32(16).uint32(message.baseFeeChangeDenominator);
        }
        if (message.elasticityMultiplier !== 0) {
            writer.uint32(24).uint32(message.elasticityMultiplier);
        }
        if (!message.enableHeight.isZero()) {
            writer.uint32(40).int64(message.enableHeight);
        }
        if (message.baseFee !== "") {
            writer.uint32(50).string(message.baseFee);
        }
        if (message.minGasPrice !== "") {
            writer.uint32(58).string(message.minGasPrice);
        }
        if (message.minGasMultiplier !== "") {
            writer.uint32(66).string(message.minGasMultiplier);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.noBaseFee = reader.bool();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.baseFeeChangeDenominator = reader.uint32();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.elasticityMultiplier = reader.uint32();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.enableHeight = reader.int64();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.baseFee = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.minGasPrice = reader.string();
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.minGasMultiplier = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            noBaseFee: isSet(object.noBaseFee) ? globalThis.Boolean(object.noBaseFee) : false,
            baseFeeChangeDenominator: isSet(object.baseFeeChangeDenominator)
                ? globalThis.Number(object.baseFeeChangeDenominator)
                : 0,
            elasticityMultiplier: isSet(object.elasticityMultiplier) ? globalThis.Number(object.elasticityMultiplier) : 0,
            enableHeight: isSet(object.enableHeight) ? long_1.default.fromValue(object.enableHeight) : long_1.default.ZERO,
            baseFee: isSet(object.baseFee) ? globalThis.String(object.baseFee) : "",
            minGasPrice: isSet(object.minGasPrice) ? globalThis.String(object.minGasPrice) : "",
            minGasMultiplier: isSet(object.minGasMultiplier) ? globalThis.String(object.minGasMultiplier) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.noBaseFee === true) {
            obj.noBaseFee = message.noBaseFee;
        }
        if (message.baseFeeChangeDenominator !== 0) {
            obj.baseFeeChangeDenominator = Math.round(message.baseFeeChangeDenominator);
        }
        if (message.elasticityMultiplier !== 0) {
            obj.elasticityMultiplier = Math.round(message.elasticityMultiplier);
        }
        if (!message.enableHeight.isZero()) {
            obj.enableHeight = (message.enableHeight || long_1.default.ZERO).toString();
        }
        if (message.baseFee !== "") {
            obj.baseFee = message.baseFee;
        }
        if (message.minGasPrice !== "") {
            obj.minGasPrice = message.minGasPrice;
        }
        if (message.minGasMultiplier !== "") {
            obj.minGasMultiplier = message.minGasMultiplier;
        }
        return obj;
    },
    create(base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f;
        const message = createBaseParams();
        message.noBaseFee = (_a = object.noBaseFee) !== null && _a !== void 0 ? _a : false;
        message.baseFeeChangeDenominator = (_b = object.baseFeeChangeDenominator) !== null && _b !== void 0 ? _b : 0;
        message.elasticityMultiplier = (_c = object.elasticityMultiplier) !== null && _c !== void 0 ? _c : 0;
        message.enableHeight = (object.enableHeight !== undefined && object.enableHeight !== null)
            ? long_1.default.fromValue(object.enableHeight)
            : long_1.default.ZERO;
        message.baseFee = (_d = object.baseFee) !== null && _d !== void 0 ? _d : "";
        message.minGasPrice = (_e = object.minGasPrice) !== null && _e !== void 0 ? _e : "";
        message.minGasMultiplier = (_f = object.minGasMultiplier) !== null && _f !== void 0 ? _f : "";
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=feemarket.js.map