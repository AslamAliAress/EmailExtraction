"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Viewport = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const latlng_1 = require("../../type/latlng");
exports.protobufPackage = "google.geo.type";
function createBaseViewport() {
    return { low: undefined, high: undefined };
}
exports.Viewport = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.low !== undefined) {
            latlng_1.LatLng.encode(message.low, writer.uint32(10).fork()).ldelim();
        }
        if (message.high !== undefined) {
            latlng_1.LatLng.encode(message.high, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseViewport();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.low = latlng_1.LatLng.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.high = latlng_1.LatLng.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            low: isSet(object.low) ? latlng_1.LatLng.fromJSON(object.low) : undefined,
            high: isSet(object.high) ? latlng_1.LatLng.fromJSON(object.high) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.low !== undefined) {
            obj.low = latlng_1.LatLng.toJSON(message.low);
        }
        if (message.high !== undefined) {
            obj.high = latlng_1.LatLng.toJSON(message.high);
        }
        return obj;
    },
    create(base) {
        return exports.Viewport.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseViewport();
        message.low = (object.low !== undefined && object.low !== null) ? latlng_1.LatLng.fromPartial(object.low) : undefined;
        message.high = (object.high !== undefined && object.high !== null) ? latlng_1.LatLng.fromPartial(object.high) : undefined;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=viewport.js.map