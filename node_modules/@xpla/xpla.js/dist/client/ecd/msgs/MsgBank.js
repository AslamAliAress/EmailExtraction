"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvmSend = void 0;
var core_1 = require("../../../core");
var EvmTx_1 = require("./EvmTx");
var decimal_js_1 = __importDefault(require("decimal.js"));
/**
 * A basic message for sending [[Coins]] between Xpla accounts.
 */
var EvmSend = /** @class */ (function (_super) {
    __extends(EvmSend, _super);
    /**
     * @param from_address sender's address
     * @param to_address recipient's address
     * @param amount value of the transaction
     */
    function EvmSend(from_address, to_address, amount) {
        var _this = _super.call(this) || this;
        _this.from_address = from_address;
        _this.to_address = to_address;
        // 현재 네이티브 코인은 axpla만 지원
        if (typeof amount === 'string' ||
            typeof amount === 'number' ||
            amount instanceof decimal_js_1.default) {
            try {
                var axpla = core_1.Numeric.parse(amount);
                _this.amount = new core_1.Coin('axpla', axpla);
                return _this;
            }
            catch (e) {
                // parsing error.
            }
        }
        if (typeof amount === 'string' ||
            Array.isArray(amount) ||
            amount instanceof core_1.Coins) {
            try {
                var coins = new core_1.Coins(amount);
                var axpla = coins.get('axpla');
                if (axpla) {
                    _this.amount = new core_1.Coin('axpla', axpla.amount);
                    return _this;
                }
            }
            catch (e) {
                // parsing error.
            }
        }
        if (amount instanceof core_1.Coin && amount.denom === 'axpla') {
            _this.amount = new core_1.Coin('axpla', amount.amount);
            return _this;
        }
        _this.amount = new core_1.Coin('axpla', 0);
        return _this;
    }
    EvmSend.prototype.tx = function () {
        var tx = {};
        tx.type = 0;
        tx.from = this.from_address;
        tx.to = this.to_address;
        tx.value = this.amount.amount;
        return tx;
    };
    return EvmSend;
}(EvmTx_1.EvmMessage));
exports.EvmSend = EvmSend;
//# sourceMappingURL=MsgBank.js.map