export declare type EVMParams = Record<string, string | number | null | undefined>;
export declare class JsonRpc2Payload {
    id: number;
    method: string;
    params: Array<any> | Record<string, any>;
    readonly jsonrpc = "2.0";
    constructor(id: number, method: string, params: Array<any> | Record<string, any>);
}
export declare type JsonRpc2Result = {
    id: number;
    result: any;
};
export declare type JsonRpc2Error = {
    id: number;
    error: {
        code: number;
        message?: string;
        data?: any;
    };
};
export declare class EVMRequester {
    private axios;
    private readonly baseURL;
    constructor(baseURL: string);
    static deepCopy(obj: any): any;
    post(id: number, method: string, params?: any): Promise<JsonRpc2Result | JsonRpc2Error>;
    isError(response: JsonRpc2Result | JsonRpc2Error): response is JsonRpc2Error;
    getError(error: JsonRpc2Error): Error;
}
