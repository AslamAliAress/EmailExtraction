import { EvmAPI } from './BaseAPI';
import { EvmAddress } from '../../../core';
import { Numeric } from '../../../core/numeric';
import { Pagination, PaginationOptions } from '../../lcd/APIRequester';
import { ECDClient } from '../ECDClient';
export declare class EvmNftAPI extends EvmAPI {
    ecd: ECDClient;
    constructor(ecd: ECDClient);
    name(contract: EvmAddress): Promise<string>;
    symbol(contract: EvmAddress): Promise<string>;
    decimals(_contract: EvmAddress): Promise<number>;
    totalSupply(contract: EvmAddress): Promise<Numeric.Output>;
    balanceOf(contract: EvmAddress, address: EvmAddress): Promise<Numeric.Output>;
    ownerOf(contract: EvmAddress, tokenId: Numeric.Input): Promise<EvmAddress>;
    tokenId(contract: EvmAddress, index: number, owner?: EvmAddress): Promise<Numeric.Output>;
    tokenURI(contract: EvmAddress, tokenId: Numeric.Input): Promise<string>;
    tokens(contract: EvmAddress, owner: EvmAddress, params?: Partial<PaginationOptions>): Promise<[number[], Pagination]>;
    tokensAll(contract: EvmAddress, params?: Partial<PaginationOptions>): Promise<[number[], Pagination]>;
}
