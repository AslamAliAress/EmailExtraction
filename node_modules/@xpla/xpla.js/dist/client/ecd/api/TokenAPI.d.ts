import { EvmAPI } from './BaseAPI';
import { Coins, EvmAddress } from '../../../core';
import { Numeric } from '../../../core/numeric';
import { Pagination } from '../../lcd/APIRequester';
import { ECDClient } from '../ECDClient';
export declare class EvmTokenAPI extends EvmAPI {
    ecd: ECDClient;
    constructor(ecd: ECDClient);
    name(contract: EvmAddress): Promise<string>;
    symbol(contract: EvmAddress): Promise<string>;
    decimals(contract: EvmAddress): Promise<number>;
    totalSupply(contract: EvmAddress): Promise<Numeric.Output>;
    balanceOf(contract: EvmAddress, address: EvmAddress): Promise<Numeric.Output>;
    balance(contract: EvmAddress, address: EvmAddress): Promise<[Coins, Pagination]>;
    total(contract: EvmAddress): Promise<[Coins, Pagination]>;
}
