import { JSONSerializable } from '../../util/json';
import { PublicKey } from '../PublicKey';
import { EvmAddress } from '../eip55';
/**
 * Stores information about an account fetched from the blockchain.
 */
export declare class EvmAccount extends JSONSerializable<EvmAccount.Amino, EvmAccount.Data, EvmAccount.Proto> {
    address: EvmAddress;
    nonce: number;
    /**
     * Creates a new Account object, holding information about a basic account.
     *
     * @param address account address
     * @param nonce nonce number, or number of transactions that have been posted
     */
    constructor(address: EvmAddress, nonce: number);
    getAccountNumber(): number;
    getSequenceNumber(): number;
    getPublicKey(): PublicKey | null;
    toAmino(_?: boolean): EvmAccount.Amino;
    static fromAmino(data: EvmAccount.Amino, _?: boolean): EvmAccount;
    static fromData(data: EvmAccount.Data, _?: boolean): EvmAccount;
    toData(_?: boolean): EvmAccount.Data;
    toProto(_?: boolean): EvmAccount.Proto;
    static fromProto(_baseAccountProto: EvmAccount.Proto, _?: boolean): EvmAccount;
    packAny(_?: boolean): any;
    static unpackAny(_pubkeyAny: any, _?: boolean): EvmAccount;
}
export declare namespace EvmAccount {
    interface AminoValue {
        address: EvmAddress;
        nonce: string;
    }
    interface Amino {
        type: 'core/Account' | 'cosmos-sdk/BaseAccount';
        value: AminoValue;
    }
    interface DataValue {
        address: EvmAddress;
        nonce: string;
    }
    interface Data extends DataValue {
        '@type': '/cosmos.auth.v1beta1.BaseAccount' | '/ethermint.types.v1.EthAccount';
    }
    type Proto = any;
}
