"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModuleAccount = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../util/json");
var BaseAccount_1 = require("./BaseAccount");
var auth_1 = require("@xpla/xpla.proto/cosmos/auth/v1beta1/auth");
var any_1 = require("@xpla/xpla.proto/google/protobuf/any");
/**
 * Stores information about an account fetched from the blockchain.
 */
var ModuleAccount = /** @class */ (function (_super) {
    __extends(ModuleAccount, _super);
    /**
     * Creates a new Account object, holding information about a basic account.
     *
     * @param base_account
     * @param name
     * @param permissions
     */
    function ModuleAccount(base_account, name, permissions) {
        var _this = _super.call(this) || this;
        _this.base_account = base_account;
        _this.name = name;
        _this.permissions = permissions;
        return _this;
    }
    Object.defineProperty(ModuleAccount.prototype, "address", {
        get: function () {
            var _a;
            return (_a = this.base_account) === null || _a === void 0 ? void 0 : _a.address;
        },
        enumerable: false,
        configurable: true
    });
    ModuleAccount.prototype.hasPermission = function (permission) {
        return this.permissions.includes(permission);
    };
    ModuleAccount.prototype.toAmino = function (isClassic) {
        var _a = this, base_account = _a.base_account, name = _a.name, permissions = _a.permissions;
        return {
            type: 'cosmos-sdk/ModuleAccount',
            value: {
                base_account: base_account === null || base_account === void 0 ? void 0 : base_account.toAmino(isClassic),
                name: name,
                permissions: permissions,
            },
        };
    };
    ModuleAccount.fromAmino = function (data, _isClassic) {
        var _a = data.value, base_account = _a.base_account, name = _a.name, permissions = _a.permissions;
        return new ModuleAccount(base_account ? BaseAccount_1.BaseAccount.fromAmino(base_account) : undefined, name, permissions);
    };
    ModuleAccount.fromData = function (data, _isClassic) {
        var base_account = data.base_account, name = data.name, permissions = data.permissions;
        return new ModuleAccount(base_account ? BaseAccount_1.BaseAccount.fromData(base_account) : undefined, name, permissions);
    };
    ModuleAccount.prototype.toData = function (_isClassic) {
        var _a = this, base_account = _a.base_account, name = _a.name, permissions = _a.permissions;
        return {
            '@type': '/cosmos.auth.v1beta1.ModuleAccount',
            base_account: base_account === null || base_account === void 0 ? void 0 : base_account.toData(),
            name: name,
            permissions: permissions,
        };
    };
    ModuleAccount.fromProto = function (proto, _isClassic) {
        return new ModuleAccount(proto.baseAccount ? BaseAccount_1.BaseAccount.fromProto(proto.baseAccount) : undefined, proto.name, proto.permissions);
    };
    ModuleAccount.prototype.toProto = function (_isClassic) {
        var _a = this, base_account = _a.base_account, name = _a.name, permissions = _a.permissions;
        return auth_1.ModuleAccount.fromPartial({
            baseAccount: base_account === null || base_account === void 0 ? void 0 : base_account.toProto(),
            name: name,
            permissions: permissions,
        });
    };
    ModuleAccount.prototype.packAny = function (_isClassic) {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.auth.v1beta1.ModuleAccount',
            value: auth_1.ModuleAccount.encode(this.toProto()).finish(),
        });
    };
    ModuleAccount.unpackAny = function (pubkeyAny, _isClassic) {
        return ModuleAccount.fromProto(auth_1.ModuleAccount.decode(pubkeyAny.value));
    };
    return ModuleAccount;
}(json_1.JSONSerializable));
exports.ModuleAccount = ModuleAccount;
//# sourceMappingURL=ModuleAccount.js.map