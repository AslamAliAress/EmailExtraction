"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvmAccount = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../util/json");
/**
 * Stores information about an account fetched from the blockchain.
 */
var EvmAccount = /** @class */ (function (_super) {
    __extends(EvmAccount, _super);
    /**
     * Creates a new Account object, holding information about a basic account.
     *
     * @param address account address
     * @param nonce nonce number, or number of transactions that have been posted
     */
    function EvmAccount(address, nonce) {
        var _this = _super.call(this) || this;
        _this.address = address;
        _this.nonce = nonce;
        return _this;
    }
    EvmAccount.prototype.getAccountNumber = function () {
        return 0;
    };
    EvmAccount.prototype.getSequenceNumber = function () {
        return this.nonce;
    };
    EvmAccount.prototype.getPublicKey = function () {
        return null;
    };
    EvmAccount.prototype.toAmino = function (_) {
        var _a = this, address = _a.address, nonce = _a.nonce;
        return {
            type: 'core/Account',
            value: {
                address: address,
                nonce: nonce.toFixed(),
            },
        };
    };
    EvmAccount.fromAmino = function (data, _) {
        var _a = data.value, address = _a.address, nonce = _a.nonce;
        return new EvmAccount(address || '', Number.parseInt(nonce) || 0);
    };
    EvmAccount.fromData = function (data, _) {
        var address = data.address, nonce = data.nonce;
        return new EvmAccount(address || '', Number.parseInt(nonce) || 0);
    };
    EvmAccount.prototype.toData = function (_) {
        var _a = this, address = _a.address, nonce = _a.nonce;
        return {
            '@type': '/ethermint.types.v1.EthAccount',
            address: address,
            nonce: nonce.toFixed(),
        };
    };
    EvmAccount.prototype.toProto = function (_) {
        return {};
    };
    EvmAccount.fromProto = function (_baseAccountProto, _) {
        return new EvmAccount('', 0);
    };
    EvmAccount.prototype.packAny = function (_) {
        return {};
    };
    EvmAccount.unpackAny = function (_pubkeyAny, _) {
        return new EvmAccount('', 0);
    };
    return EvmAccount;
}(json_1.JSONSerializable));
exports.EvmAccount = EvmAccount;
//# sourceMappingURL=EvmAccount.js.map