"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlashingParamsV1B1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../util/json");
var numeric_1 = require("../../../core/numeric");
var core_1 = require("../../../core");
var slashing_1 = require("@xpla/xpla.proto/cosmos/slashing/v1beta1/slashing");
var SlashingParamsV1B1 = /** @class */ (function (_super) {
    __extends(SlashingParamsV1B1, _super);
    /**
     * @param signed_blocks_window
     * @param min_signed_per_window
     * @param downtime_jail_duration
     * @param slash_fraction_double_sign
     * @param slash_fraction_downtime
     */
    function SlashingParamsV1B1(signed_blocks_window, min_signed_per_window, downtime_jail_duration, slash_fraction_double_sign, slash_fraction_downtime) {
        var _this = _super.call(this) || this;
        _this.downtime_jail_duration = downtime_jail_duration;
        _this.signed_blocks_window = new numeric_1.Int(signed_blocks_window);
        _this.min_signed_per_window = new numeric_1.Dec(min_signed_per_window);
        _this.slash_fraction_double_sign = new numeric_1.Dec(slash_fraction_double_sign);
        _this.slash_fraction_downtime = new numeric_1.Dec(slash_fraction_downtime);
        return _this;
    }
    SlashingParamsV1B1.fromAmino = function (data, _) {
        var signed_blocks_window = data.signed_blocks_window, min_signed_per_window = data.min_signed_per_window, downtime_jail_duration = data.downtime_jail_duration, slash_fraction_double_sign = data.slash_fraction_double_sign, slash_fraction_downtime = data.slash_fraction_downtime;
        return new SlashingParamsV1B1(signed_blocks_window !== null && signed_blocks_window !== void 0 ? signed_blocks_window : 0, min_signed_per_window !== null && min_signed_per_window !== void 0 ? min_signed_per_window : 0, downtime_jail_duration
            ? core_1.Duration.fromAmino(downtime_jail_duration)
            : undefined, slash_fraction_double_sign !== null && slash_fraction_double_sign !== void 0 ? slash_fraction_double_sign : 0, slash_fraction_downtime !== null && slash_fraction_downtime !== void 0 ? slash_fraction_downtime : 0);
    };
    SlashingParamsV1B1.prototype.toAmino = function (_) {
        var _a = this, signed_blocks_window = _a.signed_blocks_window, min_signed_per_window = _a.min_signed_per_window, downtime_jail_duration = _a.downtime_jail_duration, slash_fraction_double_sign = _a.slash_fraction_double_sign, slash_fraction_downtime = _a.slash_fraction_downtime;
        var res = {
            signed_blocks_window: signed_blocks_window.toFixed(),
            min_signed_per_window: min_signed_per_window.toFixed(),
            downtime_jail_duration: downtime_jail_duration
                ? downtime_jail_duration.toAmino()
                : undefined,
            slash_fraction_double_sign: slash_fraction_double_sign.toFixed(),
            slash_fraction_downtime: slash_fraction_downtime.toFixed(),
        };
        return res;
    };
    SlashingParamsV1B1.fromData = function (data, _) {
        var signed_blocks_window = data.signed_blocks_window, min_signed_per_window = data.min_signed_per_window, downtime_jail_duration = data.downtime_jail_duration, slash_fraction_double_sign = data.slash_fraction_double_sign, slash_fraction_downtime = data.slash_fraction_downtime;
        return new SlashingParamsV1B1(signed_blocks_window, min_signed_per_window, downtime_jail_duration
            ? core_1.Duration.fromData(downtime_jail_duration)
            : undefined, slash_fraction_double_sign, slash_fraction_downtime);
    };
    SlashingParamsV1B1.prototype.toData = function (_) {
        var _a = this, signed_blocks_window = _a.signed_blocks_window, min_signed_per_window = _a.min_signed_per_window, downtime_jail_duration = _a.downtime_jail_duration, slash_fraction_double_sign = _a.slash_fraction_double_sign, slash_fraction_downtime = _a.slash_fraction_downtime;
        var res = {
            '@type': '/cosmos.slashing.v1beta1.Params',
            signed_blocks_window: signed_blocks_window.toFixed(),
            min_signed_per_window: min_signed_per_window.toFixed(),
            downtime_jail_duration: downtime_jail_duration === null || downtime_jail_duration === void 0 ? void 0 : downtime_jail_duration.toData(),
            slash_fraction_double_sign: slash_fraction_double_sign.toFixed(),
            slash_fraction_downtime: slash_fraction_downtime.toFixed(),
        };
        return res;
    };
    SlashingParamsV1B1.fromProto = function (proto, _) {
        return new SlashingParamsV1B1(proto.signedBlocksWindow.toString(), Buffer.from(proto.minSignedPerWindow).toString('ascii'), proto.downtimeJailDuration
            ? core_1.Duration.fromProto(proto.downtimeJailDuration)
            : undefined, Buffer.from(proto.slashFractionDoubleSign).toString('ascii'), Buffer.from(proto.slashFractionDowntime).toString('ascii'));
    };
    SlashingParamsV1B1.prototype.toProto = function (_) {
        var _a = this, signed_blocks_window = _a.signed_blocks_window, min_signed_per_window = _a.min_signed_per_window, downtime_jail_duration = _a.downtime_jail_duration, slash_fraction_double_sign = _a.slash_fraction_double_sign, slash_fraction_downtime = _a.slash_fraction_downtime;
        return slashing_1.Params.fromPartial({
            signedBlocksWindow: signed_blocks_window.toFixed(),
            minSignedPerWindow: Buffer.from(min_signed_per_window.toFixed(), 'ascii'),
            downtimeJailDuration: downtime_jail_duration
                ? downtime_jail_duration.toProto()
                : undefined,
            slashFractionDoubleSign: Buffer.from(slash_fraction_double_sign.toFixed(), 'ascii'),
            slashFractionDowntime: Buffer.from(slash_fraction_downtime.toFixed(), 'ascii'),
        });
    };
    return SlashingParamsV1B1;
}(json_1.JSONSerializable));
exports.SlashingParamsV1B1 = SlashingParamsV1B1;
//# sourceMappingURL=Params.js.map