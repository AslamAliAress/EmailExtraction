import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MemberRequest } from '@xpla/xpla.proto/cosmos/group/v1/types';
import { MsgCreateGroupWithPolicy as MsgCreateGroupWithPolicyV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgCreateGroupWithPolicyV1 extends JSONSerializable<MsgCreateGroupWithPolicyV1.Amino, MsgCreateGroupWithPolicyV1.Data, MsgCreateGroupWithPolicyV1.Proto> {
    admin: AccAddress;
    members: MemberRequest[];
    group_metadata: string;
    group_policy_metadata: string;
    group_policy_as_admin: boolean;
    decision_policy: Any | undefined;
    /**
     * @param admin is the account address of the group and group policy admin
     * @param members defines the group members
     * @param group_metadata is any arbitrary metadata attached to the group
     * @param group_policy_metadata is any arbitrary metadata attached to the group policy
     * @param group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin
     * @param decision_policy specifies the group policy's decision policy
     */
    constructor(admin: AccAddress, members: MemberRequest[], group_metadata: string, group_policy_metadata: string, group_policy_as_admin: boolean, decision_policy: Any | undefined);
    static fromAmino(data: MsgCreateGroupWithPolicyV1.Amino, _isClassic?: boolean): MsgCreateGroupWithPolicyV1;
    toAmino(isClassic?: boolean): MsgCreateGroupWithPolicyV1.Amino;
    static fromData(data: MsgCreateGroupWithPolicyV1.Data, _isClassic?: boolean): MsgCreateGroupWithPolicyV1;
    toData(_isClassic?: boolean): MsgCreateGroupWithPolicyV1.Data;
    static fromProto(proto: MsgCreateGroupWithPolicyV1.Proto, _isClassic?: boolean): MsgCreateGroupWithPolicyV1;
    toProto(_isClassic?: boolean): MsgCreateGroupWithPolicyV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgCreateGroupWithPolicyV1;
}
export declare namespace MsgCreateGroupWithPolicyV1 {
    interface Amino {
        type: 'group/MsgCreateGroupWithPolicy' | 'cosmos-sdk/MsgCreateGroupWithPolicy';
        value: {
            admin: AccAddress;
            members: MemberRequest[];
            group_metadata: string;
            group_policy_metadata: string;
            group_policy_as_admin: boolean;
            decision_policy: Any | undefined;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgCreateGroupWithPolicy';
        admin: AccAddress;
        members: MemberRequest[];
        group_metadata: string;
        group_policy_metadata: string;
        group_policy_as_admin: boolean;
        decision_policy: Any | undefined;
    }
    type Proto = MsgCreateGroupWithPolicyV1_pb;
}
