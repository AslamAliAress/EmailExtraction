import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MemberRequest } from '@xpla/xpla.proto/cosmos/group/v1/types';
import { MsgUpdateGroupMembers as MsgUpdateGroupMembersV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgUpdateGroupMembersV1 extends JSONSerializable<MsgUpdateGroupMembersV1.Amino, MsgUpdateGroupMembersV1.Data, MsgUpdateGroupMembersV1.Proto> {
    admin: AccAddress;
    group_id: number;
    member_updates: MemberRequest[];
    /**
     * @param admin is the account address of the group admin
     * @param group_id is the unique ID of the group
     * @param member_updates is the list of members to update
     */
    constructor(admin: AccAddress, group_id: number, member_updates: MemberRequest[]);
    static fromAmino(data: MsgUpdateGroupMembersV1.Amino, _isClassic?: boolean): MsgUpdateGroupMembersV1;
    toAmino(isClassic?: boolean): MsgUpdateGroupMembersV1.Amino;
    static fromData(data: MsgUpdateGroupMembersV1.Data, _isClassic?: boolean): MsgUpdateGroupMembersV1;
    toData(_isClassic?: boolean): MsgUpdateGroupMembersV1.Data;
    static fromProto(proto: MsgUpdateGroupMembersV1.Proto, _isClassic?: boolean): MsgUpdateGroupMembersV1;
    toProto(_isClassic?: boolean): MsgUpdateGroupMembersV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgUpdateGroupMembersV1;
}
export declare namespace MsgUpdateGroupMembersV1 {
    interface Amino {
        type: 'group/MsgUpdateGroupMembers' | 'cosmos-sdk/MsgUpdateGroupMembers';
        value: {
            admin: AccAddress;
            group_id: string;
            member_updates: MemberRequest[];
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgUpdateGroupMembers';
        admin: AccAddress;
        group_id: string;
        member_updates: MemberRequest[];
    }
    type Proto = MsgUpdateGroupMembersV1_pb;
}
