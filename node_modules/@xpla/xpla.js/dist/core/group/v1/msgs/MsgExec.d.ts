import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgExec as MsgGroupExecV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgGroupExecV1 extends JSONSerializable<MsgGroupExecV1.Amino, MsgGroupExecV1.Data, MsgGroupExecV1.Proto> {
    proposal_id: number;
    executor: AccAddress;
    /**
     * @param proposal_id is the unique ID of the proposal
     * @param executor is the account address used to execute the proposal
     */
    constructor(proposal_id: number, executor: AccAddress);
    static fromAmino(data: MsgGroupExecV1.Amino, _isClassic?: boolean): MsgGroupExecV1;
    toAmino(isClassic?: boolean): MsgGroupExecV1.Amino;
    static fromData(data: MsgGroupExecV1.Data, _isClassic?: boolean): MsgGroupExecV1;
    toData(_isClassic?: boolean): MsgGroupExecV1.Data;
    static fromProto(proto: MsgGroupExecV1.Proto, _isClassic?: boolean): MsgGroupExecV1;
    toProto(_isClassic?: boolean): MsgGroupExecV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgGroupExecV1;
}
export declare namespace MsgGroupExecV1 {
    interface Amino {
        type: 'group/MsgExec' | 'cosmos-sdk/MsgExec';
        value: {
            proposal_id: string;
            executor: AccAddress;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgExec';
        proposal_id: string;
        executor: AccAddress;
    }
    type Proto = MsgGroupExecV1_pb;
}
