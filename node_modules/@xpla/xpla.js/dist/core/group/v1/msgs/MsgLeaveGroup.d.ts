import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgLeaveGroup as MsgLeaveGroupV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgLeaveGroupV1 extends JSONSerializable<MsgLeaveGroupV1.Amino, MsgLeaveGroupV1.Data, MsgLeaveGroupV1.Proto> {
    address: AccAddress;
    group_id: number;
    /**
     * @param address is the account address of the group member
     * @param group_id is the unique ID of the group
     */
    constructor(address: AccAddress, group_id: number);
    static fromAmino(data: MsgLeaveGroupV1.Amino, _isClassic?: boolean): MsgLeaveGroupV1;
    toAmino(isClassic?: boolean): MsgLeaveGroupV1.Amino;
    static fromData(data: MsgLeaveGroupV1.Data, _isClassic?: boolean): MsgLeaveGroupV1;
    toData(_isClassic?: boolean): MsgLeaveGroupV1.Data;
    static fromProto(proto: MsgLeaveGroupV1.Proto, _isClassic?: boolean): MsgLeaveGroupV1;
    toProto(_isClassic?: boolean): MsgLeaveGroupV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgLeaveGroupV1;
}
export declare namespace MsgLeaveGroupV1 {
    interface Amino {
        type: 'group/MsgLeaveGroup' | 'cosmos-sdk/MsgLeaveGroup';
        value: {
            address: AccAddress;
            group_id: string;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgLeaveGroup';
        address: AccAddress;
        group_id: string;
    }
    type Proto = MsgLeaveGroupV1_pb;
}
