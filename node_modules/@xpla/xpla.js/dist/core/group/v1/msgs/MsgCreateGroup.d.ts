import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MemberRequest } from '@xpla/xpla.proto/cosmos/group/v1/types';
import { MsgCreateGroup as MsgCreateGroupV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgCreateGroupV1 extends JSONSerializable<MsgCreateGroupV1.Amino, MsgCreateGroupV1.Data, MsgCreateGroupV1.Proto> {
    admin: AccAddress;
    members: MemberRequest[];
    metadata: string;
    /**
     * @param admin is the account address of the group admin
     * @param members defines the group members
     * @param metadata is any arbitrary metadata to attached to the group
     */
    constructor(admin: AccAddress, members: MemberRequest[], metadata: string);
    static fromAmino(data: MsgCreateGroupV1.Amino, _isClassic?: boolean): MsgCreateGroupV1;
    toAmino(isClassic?: boolean): MsgCreateGroupV1.Amino;
    static fromData(data: MsgCreateGroupV1.Data, _isClassic?: boolean): MsgCreateGroupV1;
    toData(_isClassic?: boolean): MsgCreateGroupV1.Data;
    static fromProto(proto: MsgCreateGroupV1.Proto, _isClassic?: boolean): MsgCreateGroupV1;
    toProto(_isClassic?: boolean): MsgCreateGroupV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgCreateGroupV1;
}
export declare namespace MsgCreateGroupV1 {
    interface Amino {
        type: 'group/MsgCreateGroup' | 'cosmos-sdk/MsgCreateGroup';
        value: {
            admin: string;
            members: MemberRequest[];
            metadata: string;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgCreateGroup';
        admin: string;
        members: MemberRequest[];
        metadata: string;
    }
    type Proto = MsgCreateGroupV1_pb;
}
