import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgUpdateGroupMetadata as MsgUpdateGroupMetadataV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgUpdateGroupMetadataV1 extends JSONSerializable<MsgUpdateGroupMetadataV1.Amino, MsgUpdateGroupMetadataV1.Data, MsgUpdateGroupMetadataV1.Proto> {
    admin: AccAddress;
    group_id: number;
    metadata: string;
    /**
     * @param authority
     * @param send_enabled is the list of entries to add or update
     * @param use_default_for is a list of denoms that should use the params.default_send_enabled value
     */
    constructor(admin: AccAddress, group_id: number, metadata: string);
    static fromAmino(data: MsgUpdateGroupMetadataV1.Amino, _isClassic?: boolean): MsgUpdateGroupMetadataV1;
    toAmino(isClassic?: boolean): MsgUpdateGroupMetadataV1.Amino;
    static fromData(data: MsgUpdateGroupMetadataV1.Data, _isClassic?: boolean): MsgUpdateGroupMetadataV1;
    toData(_isClassic?: boolean): MsgUpdateGroupMetadataV1.Data;
    static fromProto(proto: MsgUpdateGroupMetadataV1.Proto, _isClassic?: boolean): MsgUpdateGroupMetadataV1;
    toProto(_isClassic?: boolean): MsgUpdateGroupMetadataV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgUpdateGroupMetadataV1;
}
export declare namespace MsgUpdateGroupMetadataV1 {
    interface Amino {
        type: 'group/MsgUpdateGroupMetadata' | 'cosmos-sdk/MsgUpdateGroupMetadata';
        value: {
            admin: AccAddress;
            group_id: string;
            metadata: string;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgUpdateGroupMetadata';
        admin: AccAddress;
        group_id: string;
        metadata: string;
    }
    type Proto = MsgUpdateGroupMetadataV1_pb;
}
