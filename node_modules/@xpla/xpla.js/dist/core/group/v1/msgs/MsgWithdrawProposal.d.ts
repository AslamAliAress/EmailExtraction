import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgWithdrawProposal as MsgGroupWithdrawProposalV1_pb } from '@xpla/xpla.proto/cosmos/group/v1/tx';
export declare class MsgGroupWithdrawProposalV1 extends JSONSerializable<MsgGroupWithdrawProposalV1.Amino, MsgGroupWithdrawProposalV1.Data, MsgGroupWithdrawProposalV1.Proto> {
    proposal_id: number;
    address: AccAddress;
    /**
     * @param proposal is the unique ID of the proposal
     * @param address is the admin of the group policy or one of the proposer of the proposal
     */
    constructor(proposal_id: number, address: AccAddress);
    static fromAmino(data: MsgGroupWithdrawProposalV1.Amino, _isClassic?: boolean): MsgGroupWithdrawProposalV1;
    toAmino(isClassic?: boolean): MsgGroupWithdrawProposalV1.Amino;
    static fromData(data: MsgGroupWithdrawProposalV1.Data, _isClassic?: boolean): MsgGroupWithdrawProposalV1;
    toData(_isClassic?: boolean): MsgGroupWithdrawProposalV1.Data;
    static fromProto(proto: MsgGroupWithdrawProposalV1.Proto, _isClassic?: boolean): MsgGroupWithdrawProposalV1;
    toProto(_isClassic?: boolean): MsgGroupWithdrawProposalV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgGroupWithdrawProposalV1;
}
export declare namespace MsgGroupWithdrawProposalV1 {
    interface Amino {
        type: 'group/MsgWithdrawProposal' | 'cosmos-sdk/MsgWithdrawProposal';
        value: {
            proposal_id: string;
            address: AccAddress;
        };
    }
    interface Data {
        '@type': '/cosmos.group.v1.MsgWithdrawProposal';
        proposal_id: string;
        address: AccAddress;
    }
    type Proto = MsgGroupWithdrawProposalV1_pb;
}
