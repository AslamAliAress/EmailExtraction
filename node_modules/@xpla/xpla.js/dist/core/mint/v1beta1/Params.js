"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MintParamsV1B1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../util/json");
var numeric_1 = require("../../../core/numeric");
var mint_1 = require("@xpla/xpla.proto/cosmos/mint/v1beta1/mint");
var MintParamsV1B1 = /** @class */ (function (_super) {
    __extends(MintParamsV1B1, _super);
    /**
     * @param mint_denom type of coin to mint
     * @param inflation_rate_change maximum annual change in inflation rate
     * @param inflation_max maximum inflation rate
     * @param inflation_min minimum inflation rate
     * @param goal_bonded goal of percent bonded atoms
     * @param blocks_per_year expected blocks per year
     */
    function MintParamsV1B1(mint_denom, inflation_rate_change, inflation_max, inflation_min, goal_bonded, blocks_per_year) {
        var _this = _super.call(this) || this;
        _this.mint_denom = mint_denom;
        _this.inflation_rate_change = new numeric_1.Dec(inflation_rate_change);
        _this.inflation_max = new numeric_1.Dec(inflation_max);
        _this.inflation_min = new numeric_1.Dec(inflation_min);
        _this.goal_bonded = new numeric_1.Dec(goal_bonded);
        _this.blocks_per_year = new numeric_1.Int(blocks_per_year);
        return _this;
    }
    MintParamsV1B1.fromAmino = function (data, _) {
        var mint_denom = data.mint_denom, inflation_rate_change = data.inflation_rate_change, inflation_max = data.inflation_max, inflation_min = data.inflation_min, goal_bonded = data.goal_bonded, blocks_per_year = data.blocks_per_year;
        return new MintParamsV1B1(mint_denom !== null && mint_denom !== void 0 ? mint_denom : '', inflation_rate_change !== null && inflation_rate_change !== void 0 ? inflation_rate_change : 0, inflation_max !== null && inflation_max !== void 0 ? inflation_max : 0, inflation_min !== null && inflation_min !== void 0 ? inflation_min : 0, goal_bonded !== null && goal_bonded !== void 0 ? goal_bonded : 0, blocks_per_year !== null && blocks_per_year !== void 0 ? blocks_per_year : 0);
    };
    MintParamsV1B1.prototype.toAmino = function (_) {
        var _a = this, mint_denom = _a.mint_denom, inflation_rate_change = _a.inflation_rate_change, inflation_max = _a.inflation_max, inflation_min = _a.inflation_min, goal_bonded = _a.goal_bonded, blocks_per_year = _a.blocks_per_year;
        var res = {
            mint_denom: mint_denom,
            inflation_rate_change: inflation_rate_change.toFixed(),
            inflation_max: inflation_max.toFixed(),
            inflation_min: inflation_min.toFixed(),
            goal_bonded: goal_bonded.toFixed(),
            blocks_per_year: blocks_per_year.toFixed(),
        };
        return res;
    };
    MintParamsV1B1.fromData = function (data, _) {
        var mint_denom = data.mint_denom, inflation_rate_change = data.inflation_rate_change, inflation_max = data.inflation_max, inflation_min = data.inflation_min, goal_bonded = data.goal_bonded, blocks_per_year = data.blocks_per_year;
        return new MintParamsV1B1(mint_denom, inflation_rate_change, inflation_max, inflation_min, goal_bonded, blocks_per_year);
    };
    MintParamsV1B1.prototype.toData = function (_) {
        var _a = this, mint_denom = _a.mint_denom, inflation_rate_change = _a.inflation_rate_change, inflation_max = _a.inflation_max, inflation_min = _a.inflation_min, goal_bonded = _a.goal_bonded, blocks_per_year = _a.blocks_per_year;
        var res = {
            '@type': '/cosmos.mint.v1beta1.Params',
            mint_denom: mint_denom,
            inflation_rate_change: inflation_rate_change.toFixed(),
            inflation_max: inflation_max.toFixed(),
            inflation_min: inflation_min.toFixed(),
            goal_bonded: goal_bonded.toFixed(),
            blocks_per_year: blocks_per_year.toFixed(),
        };
        return res;
    };
    MintParamsV1B1.fromProto = function (proto, _) {
        return new MintParamsV1B1(proto.mintDenom, proto.inflationRateChange, proto.inflationMax, proto.inflationMin, proto.goalBonded, proto.blocksPerYear.toString());
    };
    MintParamsV1B1.prototype.toProto = function (_) {
        var _a = this, mint_denom = _a.mint_denom, inflation_rate_change = _a.inflation_rate_change, inflation_max = _a.inflation_max, inflation_min = _a.inflation_min, goal_bonded = _a.goal_bonded, blocks_per_year = _a.blocks_per_year;
        return mint_1.Params.fromPartial({
            mintDenom: mint_denom,
            inflationRateChange: inflation_rate_change.toString(),
            inflationMax: inflation_max.toString(),
            inflationMin: inflation_min.toString(),
            goalBonded: goal_bonded.toString(),
            blocksPerYear: blocks_per_year.toString(),
        });
    };
    return MintParamsV1B1;
}(json_1.JSONSerializable));
exports.MintParamsV1B1 = MintParamsV1B1;
//# sourceMappingURL=Params.js.map