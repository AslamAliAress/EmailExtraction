import { JSONSerializable } from '../../../../util/json';
import { Coins } from '../../../Coins';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgDeposit as MsgDepositV1B1_pb } from '@xpla/xpla.proto/cosmos/gov/v1beta1/tx';
/**
 * Add a deposit for a proposal
 */
export declare class MsgDepositV1B1 extends JSONSerializable<MsgDepositV1B1.Amino, MsgDepositV1B1.Data, MsgDepositV1B1.Proto> {
    proposal_id: number;
    depositor: AccAddress;
    amount: Coins;
    /**
     * @param proposal_id Id of porposal to deposit to
     * @param depositor depositor's account address
     * @param amount amount to deposit
     */
    constructor(proposal_id: number, depositor: AccAddress, amount: Coins.Input);
    static fromAmino(data: MsgDepositV1B1.Amino, _isClassic?: boolean): MsgDepositV1B1;
    toAmino(isClassic?: boolean): MsgDepositV1B1.Amino;
    static fromData(data: MsgDepositV1B1.Data, _isClassic?: boolean): MsgDepositV1B1;
    toData(_isClassic?: boolean): MsgDepositV1B1.Data;
    static fromProto(proto: MsgDepositV1B1.Proto, _isClassic?: boolean): MsgDepositV1B1;
    toProto(_isClassic?: boolean): MsgDepositV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgDepositV1B1;
}
export declare namespace MsgDepositV1B1 {
    interface Amino {
        type: 'gov/MsgDeposit' | 'cosmos-sdk/MsgDeposit';
        value: {
            proposal_id: string;
            depositor: AccAddress;
            amount: Coins.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.gov.v1beta1.MsgDeposit';
        proposal_id: string;
        depositor: AccAddress;
        amount: Coins.Data;
    }
    type Proto = MsgDepositV1B1_pb;
}
