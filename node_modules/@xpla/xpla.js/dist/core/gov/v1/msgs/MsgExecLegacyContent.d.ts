import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgExecLegacyContent as MsgExecLegacyContentV1_pb } from '@xpla/xpla.proto/cosmos/gov/v1/tx';
import { ProposalV1B1 } from '../../v1beta1/Proposal';
/**
 * MsgExecLegacyContent is used to wrap the legacy content field into a message.
 * This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 */
export declare class MsgExecLegacyContentV1 extends JSONSerializable<MsgExecLegacyContentV1.Amino, MsgExecLegacyContentV1.Data, MsgExecLegacyContentV1.Proto> {
    authority: AccAddress;
    content?: ProposalV1B1.Content | undefined;
    /**
     * @param proposal_id ID of proposal to vote on
     * @param voter voter's account address
     * @param option one of voting options
     */
    constructor(authority: AccAddress, content?: ProposalV1B1.Content | undefined);
    static fromAmino(data: MsgExecLegacyContentV1.Amino, _isClassic?: boolean): MsgExecLegacyContentV1;
    toAmino(_isClassic?: boolean): MsgExecLegacyContentV1.Amino;
    static fromData(data: MsgExecLegacyContentV1.Data, _isClassic?: boolean): MsgExecLegacyContentV1;
    toData(_isClassic?: boolean): MsgExecLegacyContentV1.Data;
    static fromProto(proto: MsgExecLegacyContentV1.Proto, _isClassic?: boolean): MsgExecLegacyContentV1;
    toProto(_isClassic?: boolean): MsgExecLegacyContentV1.Proto;
    packAny(_isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, _isClassic?: boolean): MsgExecLegacyContentV1;
}
export declare namespace MsgExecLegacyContentV1 {
    interface Amino {
        type: 'cosmos-sdk/v1/MsgExecLegacyContent';
        value: {
            content: ProposalV1B1.Content.Amino | undefined;
            authority: AccAddress;
        };
    }
    interface Data {
        '@type': '/cosmos.gov.v1.MsgExecLegacyContent';
        content: ProposalV1B1.Content.Data | undefined;
        authority: AccAddress;
    }
    type Proto = MsgExecLegacyContentV1_pb;
}
