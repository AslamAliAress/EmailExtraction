"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgVoteWeightedV1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../../util/json");
var Vote_1 = require("../Vote");
var any_1 = require("@xpla/xpla.proto/google/protobuf/any");
var tx_1 = require("@xpla/xpla.proto/cosmos/gov/v1/tx");
/**
 * Weighted vote for a proposal
 */
var MsgVoteWeightedV1 = /** @class */ (function (_super) {
    __extends(MsgVoteWeightedV1, _super);
    /**
     * @param proposal_id defines the unique id of the proposal
     * @param voter is the voter address for the proposal
     * @param options defines the weighted vote options
     * @param metadata is any arbitrary metadata attached to the VoteWeighted
     */
    function MsgVoteWeightedV1(proposal_id, voter, options, metadata) {
        var _this = _super.call(this) || this;
        _this.proposal_id = proposal_id;
        _this.voter = voter;
        _this.options = options;
        _this.metadata = metadata;
        return _this;
    }
    MsgVoteWeightedV1.fromAmino = function (data, _isClassic) {
        var _a = data.value, proposal_id = _a.proposal_id, voter = _a.voter, options = _a.options, metadata = _a.metadata;
        return new MsgVoteWeightedV1(Number.parseInt(proposal_id), voter, options.map(function (o) { return Vote_1.WeightedVoteOptionV1.fromAmino(o); }), metadata);
    };
    MsgVoteWeightedV1.prototype.toAmino = function (isClassic) {
        var _a = this, proposal_id = _a.proposal_id, voter = _a.voter, options = _a.options, metadata = _a.metadata;
        return {
            type: isClassic ? 'gov/MsgVoteWeighted' : 'cosmos-sdk/MsgVoteWeighted',
            value: {
                proposal_id: proposal_id.toFixed(),
                voter: voter,
                options: options.map(function (o) { return o.toAmino(); }),
                metadata: metadata,
            },
        };
    };
    MsgVoteWeightedV1.fromData = function (data, _isClassic) {
        var proposal_id = data.proposal_id, voter = data.voter, options = data.options, metadata = data.metadata;
        return new MsgVoteWeightedV1(Number.parseInt(proposal_id), voter, options.map(function (o) { return Vote_1.WeightedVoteOptionV1.fromData(o); }), metadata);
    };
    MsgVoteWeightedV1.prototype.toData = function (_isClassic) {
        var _a = this, proposal_id = _a.proposal_id, voter = _a.voter, options = _a.options, metadata = _a.metadata;
        return {
            '@type': '/cosmos.gov.v1.MsgVoteWeighted',
            proposal_id: proposal_id.toFixed(),
            voter: voter,
            options: options.map(function (o) { return o.toData(); }),
            metadata: metadata,
        };
    };
    MsgVoteWeightedV1.fromProto = function (proto, _isClassic) {
        return new MsgVoteWeightedV1(proto.proposalId.toNumber(), proto.voter, proto.options.map(function (o) { return Vote_1.WeightedVoteOptionV1.fromProto(o); }), proto.metadata);
    };
    MsgVoteWeightedV1.prototype.toProto = function (_isClassic) {
        var _a = this, proposal_id = _a.proposal_id, voter = _a.voter, options = _a.options, metadata = _a.metadata;
        return tx_1.MsgVoteWeighted.fromPartial({
            proposalId: proposal_id,
            voter: voter,
            options: options.map(function (o) { return o.toProto(); }),
            metadata: metadata,
        });
    };
    MsgVoteWeightedV1.prototype.packAny = function (_isClassic) {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.gov.v1.MsgVoteWeighted',
            value: tx_1.MsgVoteWeighted.encode(this.toProto()).finish(),
        });
    };
    MsgVoteWeightedV1.unpackAny = function (msgAny, _isClassic) {
        return MsgVoteWeightedV1.fromProto(tx_1.MsgVoteWeighted.decode(msgAny.value));
    };
    return MsgVoteWeightedV1;
}(json_1.JSONSerializable));
exports.MsgVoteWeightedV1 = MsgVoteWeightedV1;
//# sourceMappingURL=MsgVoteWeighted.js.map