import { JSONSerializable } from '../../../util/json';
import { Coins } from '../../Coins';
import { Dec, Numeric } from '../../numeric';
import { Duration } from '../../../core/Duration';
import { Params as GovParamsV1_pb } from '@xpla/xpla.proto/cosmos/gov/v1/gov';
export declare class GovParamsV1 extends JSONSerializable<GovParamsV1.Amino, GovParamsV1.Data, GovParamsV1.Proto> {
    max_deposit_period: Duration | undefined;
    voting_period: Duration | undefined;
    burn_vote_quorum: boolean;
    burn_proposal_deposit_prevote: boolean;
    burn_vote_veto: boolean;
    min_deposit: Coins;
    quorum: Dec;
    threshold: Dec;
    veto_threshold: Dec;
    min_initial_deposit_ratio: Dec;
    /**
     * @param min_deposit Minimum deposit for a proposal to enter voting period
     * @param max_deposit_period Maximum period for Atom holders to deposit on a proposal. Initial value: 2 months
     * @param voting_period Duration of the voting period
     * @param quorum Minimum percentage of total stake needed to vote for a result to be considered valid
     * @param threshold Minimum proportion of Yes votes for proposal to pass. Default value: 0.5
     * @param veto_threshold Minimum value of Veto votes to Total votes ratio for proposal to be vetoed. Default value: 1/3
     * @param min_initial_deposit_ratio The ratio representing the proportion of the deposit value that must be paid at proposal submission
     * @param burn_vote_quorum burn deposits if a proposal does not meet quorum
     * @param burn_proposal_deposit_prevote burn deposits if the proposal does not enter voting period
     * @param burn_vote_veto burn deposits if quorum with vote type no_veto is met
     */
    constructor(min_deposit: Coins.Input, max_deposit_period: Duration | undefined, voting_period: Duration | undefined, quorum: Numeric.Input, threshold: Numeric.Input, veto_threshold: Numeric.Input, min_initial_deposit_ratio: Numeric.Input, burn_vote_quorum: boolean, burn_proposal_deposit_prevote: boolean, burn_vote_veto: boolean);
    static fromAmino(data: GovParamsV1.Amino, _?: boolean): GovParamsV1;
    toAmino(_?: boolean): GovParamsV1.Amino;
    static fromData(data: GovParamsV1.Data, _?: boolean): GovParamsV1;
    toData(_?: boolean): GovParamsV1.Data;
    static fromProto(proto: GovParamsV1.Proto, _?: boolean): GovParamsV1;
    toProto(_?: boolean): GovParamsV1.Proto;
}
export declare namespace GovParamsV1 {
    interface Amino {
        min_deposit: Coins.Amino;
        max_deposit_period: string | undefined;
        voting_period: string | undefined;
        quorum: string | undefined;
        threshold: string | undefined;
        veto_threshold: string | undefined;
        min_initial_deposit_ratio: string | undefined;
        burn_vote_quorum: boolean | undefined;
        burn_proposal_deposit_prevote: boolean | undefined;
        burn_vote_veto: boolean | undefined;
    }
    interface Data {
        '@type': '/cosmos.gov.v1.Params';
        min_deposit: Coins.Data;
        max_deposit_period: object | undefined;
        voting_period: object | undefined;
        quorum: string;
        threshold: string;
        veto_threshold: string;
        min_initial_deposit_ratio: string;
        burn_vote_quorum: boolean;
        burn_proposal_deposit_prevote: boolean;
        burn_vote_veto: boolean;
    }
    type Proto = GovParamsV1_pb;
}
