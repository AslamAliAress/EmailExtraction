"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsensusParams = exports.HashedParams = exports.VersionParams = exports.ValidatorParams = exports.EvidenceParams = exports.BlockParams = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../util/json");
var numeric_1 = require("../../../core/numeric");
var Duration_1 = require("../../../core/Duration");
var params_1 = require("@xpla/xpla.proto/tendermint/types/params");
var BlockParams = /** @class */ (function (_super) {
    __extends(BlockParams, _super);
    /**
     * @param max_bytes Max block size, in bytes. must be greater than 0
     * @param max_gas Max gas per block. must be greater or equal to -1
     */
    function BlockParams(max_bytes, max_gas) {
        var _this = _super.call(this) || this;
        _this.max_bytes = new numeric_1.Int(max_bytes);
        _this.max_gas = new numeric_1.Int(max_gas);
        return _this;
    }
    BlockParams.fromAmino = function (data, _) {
        var max_bytes = data.max_bytes, max_gas = data.max_gas;
        return new BlockParams(max_bytes !== null && max_bytes !== void 0 ? max_bytes : 0, max_gas !== null && max_gas !== void 0 ? max_gas : 0);
    };
    BlockParams.prototype.toAmino = function (_) {
        var _a = this, max_bytes = _a.max_bytes, max_gas = _a.max_gas;
        var res = {
            max_bytes: max_bytes.toFixed(),
            max_gas: max_gas.toFixed(),
        };
        return res;
    };
    BlockParams.fromData = function (data, _) {
        var max_bytes = data.max_bytes, max_gas = data.max_gas;
        return new BlockParams(max_bytes, max_gas);
    };
    BlockParams.prototype.toData = function (_) {
        var _a = this, max_bytes = _a.max_bytes, max_gas = _a.max_gas;
        var res = {
            '@type': '/tendermint.types.BlockParams',
            max_bytes: max_bytes.toFixed(),
            max_gas: max_gas.toFixed(),
        };
        return res;
    };
    BlockParams.fromProto = function (proto, _) {
        return new BlockParams(proto.maxBytes.toString(), proto.maxGas.toString());
    };
    BlockParams.prototype.toProto = function (_) {
        var _a = this, max_bytes = _a.max_bytes, max_gas = _a.max_gas;
        return params_1.BlockParams.fromPartial({
            maxBytes: max_bytes.toFixed(),
            maxGas: max_gas.toFixed(),
        });
    };
    return BlockParams;
}(json_1.JSONSerializable));
exports.BlockParams = BlockParams;
var EvidenceParams = /** @class */ (function (_super) {
    __extends(EvidenceParams, _super);
    /**
     * @param max_bytes Max block size, in bytes. must be greater than 0
     * @param max_gas Max gas per block. must be greater or equal to -1
     */
    function EvidenceParams(max_age_num_blocks, max_age_duration, max_bytes) {
        var _this = _super.call(this) || this;
        _this.max_age_duration = max_age_duration;
        _this.max_age_num_blocks = new numeric_1.Int(max_age_num_blocks);
        _this.max_bytes = new numeric_1.Int(max_bytes);
        return _this;
    }
    EvidenceParams.fromAmino = function (data, _) {
        var max_age_num_blocks = data.max_age_num_blocks, max_age_duration = data.max_age_duration, max_bytes = data.max_bytes;
        return new EvidenceParams(max_age_num_blocks !== null && max_age_num_blocks !== void 0 ? max_age_num_blocks : 0, Duration_1.Duration.fromString(max_age_duration !== null && max_age_duration !== void 0 ? max_age_duration : '0s'), max_bytes !== null && max_bytes !== void 0 ? max_bytes : 0);
    };
    EvidenceParams.prototype.toAmino = function (_) {
        var _a = this, max_age_num_blocks = _a.max_age_num_blocks, max_age_duration = _a.max_age_duration, max_bytes = _a.max_bytes;
        var res = {
            max_age_num_blocks: max_age_num_blocks.toFixed(),
            max_age_duration: max_age_duration.toAmino(),
            max_bytes: max_bytes.toFixed(),
        };
        return res;
    };
    EvidenceParams.fromData = function (data, _) {
        var max_age_num_blocks = data.max_age_num_blocks, max_age_duration = data.max_age_duration, max_bytes = data.max_bytes;
        return new EvidenceParams(max_age_num_blocks, max_age_duration
            ? Duration_1.Duration.fromData(max_age_duration)
            : Duration_1.Duration.fromString('0s'), max_bytes);
    };
    EvidenceParams.prototype.toData = function (_) {
        var _a = this, max_age_num_blocks = _a.max_age_num_blocks, max_age_duration = _a.max_age_duration, max_bytes = _a.max_bytes;
        var res = {
            '@type': '/tendermint.types.EvidenceParams',
            max_age_num_blocks: max_age_num_blocks.toFixed(),
            max_age_duration: max_age_duration.toData(),
            max_bytes: max_bytes.toFixed(),
        };
        return res;
    };
    EvidenceParams.fromProto = function (proto, _) {
        return new EvidenceParams(proto.maxAgeNumBlocks.toString(), proto.maxAgeDuration
            ? Duration_1.Duration.fromProto(proto.maxAgeDuration)
            : Duration_1.Duration.fromString('0s'), proto.maxBytes.toString());
    };
    EvidenceParams.prototype.toProto = function (_) {
        var _a = this, max_age_num_blocks = _a.max_age_num_blocks, max_age_duration = _a.max_age_duration, max_bytes = _a.max_bytes;
        return params_1.EvidenceParams.fromPartial({
            maxAgeNumBlocks: max_age_num_blocks.toFixed(),
            maxAgeDuration: max_age_duration.toProto(),
            maxBytes: max_bytes.toFixed(),
        });
    };
    return EvidenceParams;
}(json_1.JSONSerializable));
exports.EvidenceParams = EvidenceParams;
var ValidatorParams = /** @class */ (function (_super) {
    __extends(ValidatorParams, _super);
    /**
     * @param max_bytes Max block size, in bytes. must be greater than 0
     * @param max_gas Max gas per block. must be greater or equal to -1
     */
    function ValidatorParams(pub_key_types) {
        var _this = _super.call(this) || this;
        _this.pub_key_types = pub_key_types;
        return _this;
    }
    ValidatorParams.fromAmino = function (data, _) {
        var pub_key_types = data.pub_key_types;
        return new ValidatorParams(pub_key_types);
    };
    ValidatorParams.prototype.toAmino = function (_) {
        var pub_key_types = this.pub_key_types;
        var res = {
            pub_key_types: pub_key_types,
        };
        return res;
    };
    ValidatorParams.fromData = function (data, _) {
        var pub_key_types = data.pub_key_types;
        return new ValidatorParams(pub_key_types);
    };
    ValidatorParams.prototype.toData = function (_) {
        var pub_key_types = this.pub_key_types;
        var res = {
            '@type': '/tendermint.types.ValidatorParams',
            pub_key_types: pub_key_types,
        };
        return res;
    };
    ValidatorParams.fromProto = function (proto, _) {
        return new ValidatorParams(proto.pubKeyTypes);
    };
    ValidatorParams.prototype.toProto = function (_) {
        var pub_key_types = this.pub_key_types;
        return params_1.ValidatorParams.fromPartial({
            pubKeyTypes: pub_key_types,
        });
    };
    return ValidatorParams;
}(json_1.JSONSerializable));
exports.ValidatorParams = ValidatorParams;
var VersionParams = /** @class */ (function (_super) {
    __extends(VersionParams, _super);
    function VersionParams(app) {
        var _this = _super.call(this) || this;
        _this.app = new numeric_1.Int(app);
        return _this;
    }
    VersionParams.fromAmino = function (data, _) {
        var app = data.app;
        return new VersionParams(app !== null && app !== void 0 ? app : 0);
    };
    VersionParams.prototype.toAmino = function (_) {
        var app = this.app;
        var res = {
            app: app.toFixed(),
        };
        return res;
    };
    VersionParams.fromData = function (data, _) {
        var app = data.app;
        return new VersionParams(app);
    };
    VersionParams.prototype.toData = function (_) {
        var app = this.app;
        var res = {
            '@type': '/tendermint.types.VersionParams',
            app: app.toFixed(),
        };
        return res;
    };
    VersionParams.fromProto = function (proto, _) {
        return new VersionParams(proto.app.toString());
    };
    VersionParams.prototype.toProto = function (_) {
        var app = this.app;
        return params_1.VersionParams.fromPartial({
            app: app.toFixed(),
        });
    };
    return VersionParams;
}(json_1.JSONSerializable));
exports.VersionParams = VersionParams;
var HashedParams = /** @class */ (function (_super) {
    __extends(HashedParams, _super);
    function HashedParams(block_max_bytes, block_max_gas) {
        var _this = _super.call(this) || this;
        _this.block_max_bytes = new numeric_1.Int(block_max_bytes);
        _this.block_max_gas = new numeric_1.Int(block_max_gas);
        return _this;
    }
    HashedParams.fromAmino = function (data, _) {
        var block_max_bytes = data.block_max_bytes, block_max_gas = data.block_max_gas;
        return new HashedParams(block_max_bytes !== null && block_max_bytes !== void 0 ? block_max_bytes : 0, block_max_gas !== null && block_max_gas !== void 0 ? block_max_gas : 0);
    };
    HashedParams.prototype.toAmino = function (_) {
        var _a = this, block_max_bytes = _a.block_max_bytes, block_max_gas = _a.block_max_gas;
        var res = {
            block_max_bytes: block_max_bytes.toFixed(),
            block_max_gas: block_max_gas.toFixed(),
        };
        return res;
    };
    HashedParams.fromData = function (data, _) {
        var block_max_bytes = data.block_max_bytes, block_max_gas = data.block_max_gas;
        return new HashedParams(block_max_bytes, block_max_gas);
    };
    HashedParams.prototype.toData = function (_) {
        var _a = this, block_max_bytes = _a.block_max_bytes, block_max_gas = _a.block_max_gas;
        var res = {
            '@type': '/tendermint.types.HashedParams',
            block_max_bytes: block_max_bytes.toFixed(),
            block_max_gas: block_max_gas.toFixed(),
        };
        return res;
    };
    HashedParams.fromProto = function (proto, _) {
        return new HashedParams(proto.blockMaxBytes.toString(), proto.blockMaxGas.toString());
    };
    HashedParams.prototype.toProto = function (_) {
        var _a = this, block_max_bytes = _a.block_max_bytes, block_max_gas = _a.block_max_gas;
        return params_1.HashedParams.fromPartial({
            blockMaxBytes: block_max_bytes.toFixed(),
            blockMaxGas: block_max_gas.toFixed(),
        });
    };
    return HashedParams;
}(json_1.JSONSerializable));
exports.HashedParams = HashedParams;
var ConsensusParams = /** @class */ (function (_super) {
    __extends(ConsensusParams, _super);
    function ConsensusParams(block, evidence, validator, version) {
        var _this = _super.call(this) || this;
        _this.block = block;
        _this.evidence = evidence;
        _this.validator = validator;
        _this.version = version;
        return _this;
    }
    ConsensusParams.fromAmino = function (data, _) {
        var block = data.block, evidence = data.evidence, validator = data.validator, version = data.version;
        return new ConsensusParams(block ? BlockParams.fromAmino(block) : undefined, evidence ? EvidenceParams.fromAmino(evidence) : undefined, validator ? ValidatorParams.fromAmino(validator) : undefined, version ? VersionParams.fromAmino(version) : undefined);
    };
    ConsensusParams.prototype.toAmino = function (_) {
        var _a = this, block = _a.block, evidence = _a.evidence, validator = _a.validator, version = _a.version;
        var res = {
            block: block === null || block === void 0 ? void 0 : block.toAmino(),
            evidence: evidence === null || evidence === void 0 ? void 0 : evidence.toAmino(),
            validator: validator === null || validator === void 0 ? void 0 : validator.toAmino(),
            version: version === null || version === void 0 ? void 0 : version.toAmino(),
        };
        return res;
    };
    ConsensusParams.fromData = function (data, _) {
        var block = data.block, evidence = data.evidence, validator = data.validator, version = data.version;
        return new ConsensusParams(block ? BlockParams.fromData(block) : undefined, evidence ? EvidenceParams.fromData(evidence) : undefined, validator ? ValidatorParams.fromData(validator) : undefined, version ? VersionParams.fromData(version) : undefined);
    };
    ConsensusParams.prototype.toData = function (_) {
        var _a = this, block = _a.block, evidence = _a.evidence, validator = _a.validator, version = _a.version;
        var res = {
            '@type': '/tendermint.types.ConsensusParams',
            block: block === null || block === void 0 ? void 0 : block.toData(),
            evidence: evidence === null || evidence === void 0 ? void 0 : evidence.toData(),
            validator: validator === null || validator === void 0 ? void 0 : validator.toData(),
            version: version === null || version === void 0 ? void 0 : version.toData(),
        };
        return res;
    };
    ConsensusParams.fromProto = function (proto, _) {
        return new ConsensusParams(proto.block ? BlockParams.fromProto(proto.block) : undefined, proto.evidence ? EvidenceParams.fromProto(proto.evidence) : undefined, proto.validator ? ValidatorParams.fromProto(proto.validator) : undefined, proto.version ? VersionParams.fromProto(proto.version) : undefined);
    };
    ConsensusParams.prototype.toProto = function (_) {
        var _a = this, block = _a.block, evidence = _a.evidence, validator = _a.validator, version = _a.version;
        return params_1.ConsensusParams.fromPartial({
            block: block === null || block === void 0 ? void 0 : block.toProto(),
            evidence: evidence === null || evidence === void 0 ? void 0 : evidence.toProto(),
            validator: validator === null || validator === void 0 ? void 0 : validator.toProto(),
            version: version === null || version === void 0 ? void 0 : version.toProto(),
        });
    };
    return ConsensusParams;
}(json_1.JSONSerializable));
exports.ConsensusParams = ConsensusParams;
//# sourceMappingURL=Params.js.map