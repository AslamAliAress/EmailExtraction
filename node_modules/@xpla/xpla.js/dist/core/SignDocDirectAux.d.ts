import { JSONSerializable } from '../util/json';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { Tip, SignDocDirectAux as SignDocDirectAux_pb } from '@xpla/xpla.proto/cosmos/tx/v1beta1/tx';
import { Tx } from './Tx';
/**
 * A sign message is a data structure that is used to create a [[StdSignature]] to be later
 * appended to the list of signatures in an [[StdTx]]. Essentially, it contains all the
 * information needed to sign and build a transaction, and can be described as an
 * "unsigned transaction."
 */
export declare class SignDocDirectAux extends JSONSerializable<SignDocDirectAux.Amino, SignDocDirectAux.Data, SignDocDirectAux.Proto> {
    body_bytes: Uint8Array;
    public_key: Any | undefined;
    chain_id: string;
    account_number: number;
    sequence: number;
    tip: Tip | undefined;
    /**
     *
     * @param body_bytes is protobuf serialization of a TxBody that matches the representation in TxRaw
     * @param public_key is the public key of the signing account
     * @param chain_id is the identifier of the chain this transaction targets
     * @param account_number is the account number of the account in state
     * @param sequence is the sequence number of the signing account
     * @param tip is the optional tip used for transactions fees paid in another denom
     */
    constructor(body_bytes: Uint8Array, public_key: Any | undefined, chain_id: string, account_number: number, sequence: number, tip: Tip | undefined);
    toAmino(_isClassic?: boolean): SignDocDirectAux.Amino;
    toData(_isClassic?: boolean): SignDocDirectAux.Data;
    toProto(_isClassic?: boolean): SignDocDirectAux.Proto;
    toUnSignedTx(): Tx;
    toBytes(isClassic?: boolean): Uint8Array;
}
export declare namespace SignDocDirectAux {
    interface Amino {
        body_bytes: Uint8Array;
        public_key: Any | undefined;
        chain_id: string;
        account_number: number;
        sequence: number;
        tip: Tip | undefined;
    }
    interface Data {
        body_bytes: Uint8Array;
        public_key: Any | undefined;
        chain_id: string;
        account_number: number;
        sequence: number;
        tip: Tip | undefined;
    }
    type Proto = SignDocDirectAux_pb;
}
