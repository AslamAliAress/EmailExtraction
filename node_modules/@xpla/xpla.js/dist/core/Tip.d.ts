import { JSONSerializable } from '../util/json';
import { Coins } from './Coins';
import { AccAddress } from './bech32';
import { Tip as Tip_pb } from '@xpla/xpla.proto/cosmos/tx/v1beta1/tx';
/**
 * Tip is the tip used for meta-transactions.
 */
export declare class Tip extends JSONSerializable<Tip.Amino, Tip.Data, Tip.Proto> {
    tipper: AccAddress;
    /** Tip amount */
    amount: Coins;
    /**
     * Creates a new Tip object.
     * @param amount is the amount of the tip
     * @param tipper is the address of the account paying for the tip
     */
    constructor(amount: Coins.Input, tipper: AccAddress);
    static fromAmino(data: Tip.Amino): Tip;
    toAmino(): Tip.Amino;
    static fromData(data: Tip.Data): Tip;
    toData(): Tip.Data;
    static fromProto(proto: Tip.Proto): Tip;
    toProto(): Tip.Proto;
}
export declare namespace Tip {
    interface Amino {
        amount: Coins.Data;
        tipper: AccAddress;
    }
    interface Data {
        amount: Coins.Data;
        tipper: AccAddress;
    }
    type Proto = Tip_pb;
}
