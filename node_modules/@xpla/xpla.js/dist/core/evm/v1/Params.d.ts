import { JSONSerializable } from '../../../util/json';
import { Int, Numeric } from '../../../core/numeric';
import { Denom } from '../../../core';
import { ChainConfig as EvmChainConfigV1_pb, Params as EvmParamsV1_pb } from '@xpla/xpla.proto/ethermint/evm/v1/evm';
export declare class EvmParamsV1 extends JSONSerializable<EvmParamsV1.Amino, EvmParamsV1.Data, EvmParamsV1.Proto> {
    evm_denom: Denom;
    enable_create: boolean;
    enable_call: boolean;
    chain_config: EvmChainConfigV1 | undefined;
    allow_unprotected_txs: boolean;
    extra_eips: Int[];
    /**
     * @param evm_denom represents the token denomination used to run the EVM state transitions
     * @param enable_create toggles state transitions that use the vm.Create function
     * @param enable_call toggles state transitions that use the vm.Call function
     * @param extra_eips defines the additional EIPs for the vm.Config
     * @param chain_config defines the EVM chain configuration parameters
     * @param allow_unprotected_txs defines if replay-protected (i.e non EIP155 signed) transactions can be executed on the state machine
     */
    constructor(evm_denom: Denom, enable_create: boolean, enable_call: boolean, extra_eips: Numeric.Input[], chain_config: EvmChainConfigV1 | undefined, allow_unprotected_txs: boolean);
    static fromAmino(data: EvmParamsV1.Amino, _?: boolean): EvmParamsV1;
    toAmino(_?: boolean): EvmParamsV1.Amino;
    static fromData(data: EvmParamsV1.Data, _?: boolean): EvmParamsV1;
    toData(_?: boolean): EvmParamsV1.Data;
    static fromProto(proto: EvmParamsV1.Proto, _?: boolean): EvmParamsV1;
    toProto(_?: boolean): EvmParamsV1.Proto;
}
export declare namespace EvmParamsV1 {
    interface Amino {
        evm_denom: string | undefined;
        enable_create: boolean | undefined;
        enable_call: boolean | undefined;
        extra_eips: string[] | undefined;
        chain_config: EvmChainConfigV1.Amino | undefined;
        allow_unprotected_txs: boolean | undefined;
    }
    interface Data {
        '@type': '/ethermint.evm.v1.Params';
        evm_denom: string;
        enable_create: boolean;
        enable_call: boolean;
        extra_eips: string[];
        chain_config: EvmChainConfigV1.Data | undefined;
        allow_unprotected_txs: boolean;
    }
    type Proto = EvmParamsV1_pb;
}
export declare class EvmChainConfigV1 extends JSONSerializable<EvmChainConfigV1.Amino, EvmChainConfigV1.Data, EvmChainConfigV1.Proto> {
    dao_fork_support: boolean;
    eip150_hash: string;
    homestead_block: Int;
    dao_fork_block: Int;
    eip150_block: Int;
    eip155_block: Int;
    eip158_block: Int;
    byzantium_block: Int;
    constantinople_block: Int;
    petersburg_block: Int;
    istanbul_block: Int;
    muir_glacier_block: Int;
    berlin_block: Int;
    london_block: Int;
    arrow_glacier_block: Int;
    gray_glacier_block: Int;
    merge_netsplit_block: Int;
    shanghai_block: Int;
    cancun_block: Int;
    /**
     * @param homestead_block switch (nil no fork, 0 = already homestead)
     * @param dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)
     * @param dao_fork_support defines whether the nodes supports or opposes the DAO hard-fork
     * @param eip150_block EIP150 implements the Gas price changes
     * @param eip150_hash EIP150 HF hash (needed for header only clients as only gas pricing changed)
     * @param eip155_block EIP155Block HF block
     * @param eip158_block EIP158 HF block
     * @param byzantium_block Byzantium switch block (nil no fork, 0 = already on byzantium)
     * @param constantinople_block Constantinople switch block (nil no fork, 0 = already activated)
     * @param petersburg_block Petersburg switch block (nil same as Constantinople)
     * @param istanbul_block Istanbul switch block (nil no fork, 0 = already on istanbul)
     * @param muir_glacier_block Eip-2384 (bomb delay) switch block (nil no fork, 0 = already activated)
     * @param berlin_block Berlin switch block (nil = no fork, 0 = already on berlin)
     * @param london_block London switch block (nil = no fork, 0 = already on london)
     * @param arrow_glacier_block Eip-4345 (bomb delay) switch block (nil = no fork, 0 = already activated)
     * @param gray_glacier_block EIP-5133 (bomb delay) switch block (nil = no fork, 0 = already activated)
     * @param merge_netsplit_block Virtual fork after The Merge to use as a network splitter
     * @param shanghai_block switch block (nil = no fork, 0 = already on shanghai)
     * @param cancun_block switch block (nil = no fork, 0 = already on cancun)
     */
    constructor(homestead_block: Numeric.Input, dao_fork_block: Numeric.Input, dao_fork_support: boolean, eip150_block: Numeric.Input, eip150_hash: string, eip155_block: Numeric.Input, eip158_block: Numeric.Input, byzantium_block: Numeric.Input, constantinople_block: Numeric.Input, petersburg_block: Numeric.Input, istanbul_block: Numeric.Input, muir_glacier_block: Numeric.Input, berlin_block: Numeric.Input, london_block: Numeric.Input, arrow_glacier_block: Numeric.Input, gray_glacier_block: Numeric.Input, merge_netsplit_block: Numeric.Input, shanghai_block: Numeric.Input, cancun_block: Numeric.Input);
    static fromAmino(data: EvmChainConfigV1.Amino, _?: boolean): EvmChainConfigV1;
    toAmino(_?: boolean): EvmChainConfigV1.Amino;
    static fromData(data: EvmChainConfigV1.Data, _?: boolean): EvmChainConfigV1;
    toData(_?: boolean): EvmChainConfigV1.Data;
    static fromProto(proto: EvmChainConfigV1.Proto, _?: boolean): EvmChainConfigV1;
    toProto(_?: boolean): EvmChainConfigV1.Proto;
}
export declare namespace EvmChainConfigV1 {
    interface Amino {
        homestead_block: string | undefined;
        dao_fork_block: string | undefined;
        dao_fork_support: boolean | undefined;
        eip150_block: string | undefined;
        eip150_hash: string | undefined;
        eip155_block: string | undefined;
        eip158_block: string | undefined;
        byzantium_block: string | undefined;
        constantinople_block: string | undefined;
        petersburg_block: string | undefined;
        istanbul_block: string | undefined;
        muir_glacier_block: string | undefined;
        berlin_block: string | undefined;
        london_block: string | undefined;
        arrow_glacier_block: string | undefined;
        gray_glacier_block: string | undefined;
        merge_netsplit_block: string | undefined;
        shanghai_block: string | undefined;
        cancun_block: string | undefined;
    }
    interface Data {
        '@type': '/ethermint.evm.v1.Params';
        homestead_block: string;
        dao_fork_block: string;
        dao_fork_support: boolean;
        eip150_block: string;
        eip150_hash: string;
        eip155_block: string;
        eip158_block: string;
        byzantium_block: string;
        constantinople_block: string;
        petersburg_block: string;
        istanbul_block: string;
        muir_glacier_block: string;
        berlin_block: string;
        london_block: string;
        arrow_glacier_block: string;
        gray_glacier_block: string;
        merge_netsplit_block: string;
        shanghai_block: string;
        cancun_block: string;
    }
    type Proto = EvmChainConfigV1_pb;
}
