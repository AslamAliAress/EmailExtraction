import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgUpdateParams as MsgUpdateEvmParamsV1_pb } from '@xpla/xpla.proto/ethermint/evm/v1/tx';
import { EvmParamsV1 } from '../Params';
export declare class MsgUpdateEvmParamsV1 extends JSONSerializable<MsgUpdateEvmParamsV1.Amino, MsgUpdateEvmParamsV1.Data, MsgUpdateEvmParamsV1.Proto> {
    authority: AccAddress;
    params: EvmParamsV1 | undefined;
    /**
     * @param authority is the address that controls the module
     * @param params defines the x/bank parameters to update
     */
    constructor(authority: AccAddress, params: EvmParamsV1 | undefined);
    static fromAmino(data: MsgUpdateEvmParamsV1.Amino, _isClassic?: boolean): MsgUpdateEvmParamsV1;
    toAmino(_isClassic?: boolean): MsgUpdateEvmParamsV1.Amino;
    static fromData(data: MsgUpdateEvmParamsV1.Data, _isClassic?: boolean): MsgUpdateEvmParamsV1;
    toData(_isClassic?: boolean): MsgUpdateEvmParamsV1.Data;
    static fromProto(proto: MsgUpdateEvmParamsV1.Proto, _isClassic?: boolean): MsgUpdateEvmParamsV1;
    toProto(_isClassic?: boolean): MsgUpdateEvmParamsV1.Proto;
    packAny(_isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, _isClassic?: boolean): MsgUpdateEvmParamsV1;
}
export declare namespace MsgUpdateEvmParamsV1 {
    interface Amino {
        type: 'ethermint/MsgUpdateParams';
        value: {
            authority: AccAddress;
            params: EvmParamsV1.Amino | undefined;
        };
    }
    interface Data {
        '@type': '/ethermint.evm.v1.MsgUpdateParams';
        authority: AccAddress;
        params: EvmParamsV1.Data | undefined;
    }
    type Proto = MsgUpdateEvmParamsV1_pb;
}
