"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvmChainConfigV1 = exports.EvmParamsV1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../util/json");
var numeric_1 = require("../../../core/numeric");
var evm_1 = require("@xpla/xpla.proto/ethermint/evm/v1/evm");
var EvmParamsV1 = /** @class */ (function (_super) {
    __extends(EvmParamsV1, _super);
    /**
     * @param evm_denom represents the token denomination used to run the EVM state transitions
     * @param enable_create toggles state transitions that use the vm.Create function
     * @param enable_call toggles state transitions that use the vm.Call function
     * @param extra_eips defines the additional EIPs for the vm.Config
     * @param chain_config defines the EVM chain configuration parameters
     * @param allow_unprotected_txs defines if replay-protected (i.e non EIP155 signed) transactions can be executed on the state machine
     */
    function EvmParamsV1(evm_denom, enable_create, enable_call, extra_eips, chain_config, allow_unprotected_txs) {
        var _this = _super.call(this) || this;
        _this.evm_denom = evm_denom;
        _this.enable_create = enable_create;
        _this.enable_call = enable_call;
        _this.chain_config = chain_config;
        _this.allow_unprotected_txs = allow_unprotected_txs;
        _this.extra_eips = extra_eips.map(function (eip) { return new numeric_1.Int(eip); });
        return _this;
    }
    EvmParamsV1.fromAmino = function (data, _) {
        var evm_denom = data.evm_denom, enable_create = data.enable_create, enable_call = data.enable_call, extra_eips = data.extra_eips, chain_config = data.chain_config, allow_unprotected_txs = data.allow_unprotected_txs;
        return new EvmParamsV1(evm_denom !== null && evm_denom !== void 0 ? evm_denom : '', enable_create !== null && enable_create !== void 0 ? enable_create : false, enable_call !== null && enable_call !== void 0 ? enable_call : false, extra_eips !== null && extra_eips !== void 0 ? extra_eips : [], chain_config ? EvmChainConfigV1.fromAmino(chain_config) : undefined, allow_unprotected_txs !== null && allow_unprotected_txs !== void 0 ? allow_unprotected_txs : false);
    };
    EvmParamsV1.prototype.toAmino = function (_) {
        var _a = this, evm_denom = _a.evm_denom, enable_create = _a.enable_create, enable_call = _a.enable_call, extra_eips = _a.extra_eips, chain_config = _a.chain_config, allow_unprotected_txs = _a.allow_unprotected_txs;
        var res = {
            evm_denom: evm_denom,
            enable_create: enable_create,
            enable_call: enable_call,
            extra_eips: extra_eips.map(function (eip) { return eip.toFixed(); }),
            chain_config: chain_config === null || chain_config === void 0 ? void 0 : chain_config.toAmino(),
            allow_unprotected_txs: allow_unprotected_txs,
        };
        return res;
    };
    EvmParamsV1.fromData = function (data, _) {
        var evm_denom = data.evm_denom, enable_create = data.enable_create, enable_call = data.enable_call, extra_eips = data.extra_eips, chain_config = data.chain_config, allow_unprotected_txs = data.allow_unprotected_txs;
        return new EvmParamsV1(evm_denom, enable_create, enable_call, extra_eips, chain_config ? EvmChainConfigV1.fromData(chain_config) : undefined, allow_unprotected_txs);
    };
    EvmParamsV1.prototype.toData = function (_) {
        var _a = this, evm_denom = _a.evm_denom, enable_create = _a.enable_create, enable_call = _a.enable_call, extra_eips = _a.extra_eips, chain_config = _a.chain_config, allow_unprotected_txs = _a.allow_unprotected_txs;
        var res = {
            '@type': '/ethermint.evm.v1.Params',
            evm_denom: evm_denom,
            enable_create: enable_create,
            enable_call: enable_call,
            extra_eips: extra_eips.map(function (eip) { return eip.toFixed(); }),
            chain_config: chain_config === null || chain_config === void 0 ? void 0 : chain_config.toData(),
            allow_unprotected_txs: allow_unprotected_txs,
        };
        return res;
    };
    EvmParamsV1.fromProto = function (proto, _) {
        return new EvmParamsV1(proto.evmDenom, proto.enableCreate, proto.enableCall, proto.extraEips.map(function (eip) { return new numeric_1.Int(eip.toString()); }), proto.chainConfig
            ? EvmChainConfigV1.fromProto(proto.chainConfig)
            : undefined, proto.allowUnprotectedTxs);
    };
    EvmParamsV1.prototype.toProto = function (_) {
        var _a = this, evm_denom = _a.evm_denom, enable_create = _a.enable_create, enable_call = _a.enable_call, extra_eips = _a.extra_eips, chain_config = _a.chain_config, allow_unprotected_txs = _a.allow_unprotected_txs;
        return evm_1.Params.fromPartial({
            evmDenom: evm_denom,
            enableCreate: enable_create,
            enableCall: enable_call,
            extraEips: extra_eips.map(function (eip) { return eip.toFixed(); }),
            chainConfig: chain_config === null || chain_config === void 0 ? void 0 : chain_config.toProto(),
            allowUnprotectedTxs: allow_unprotected_txs,
        });
    };
    return EvmParamsV1;
}(json_1.JSONSerializable));
exports.EvmParamsV1 = EvmParamsV1;
var EvmChainConfigV1 = /** @class */ (function (_super) {
    __extends(EvmChainConfigV1, _super);
    /**
     * @param homestead_block switch (nil no fork, 0 = already homestead)
     * @param dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)
     * @param dao_fork_support defines whether the nodes supports or opposes the DAO hard-fork
     * @param eip150_block EIP150 implements the Gas price changes
     * @param eip150_hash EIP150 HF hash (needed for header only clients as only gas pricing changed)
     * @param eip155_block EIP155Block HF block
     * @param eip158_block EIP158 HF block
     * @param byzantium_block Byzantium switch block (nil no fork, 0 = already on byzantium)
     * @param constantinople_block Constantinople switch block (nil no fork, 0 = already activated)
     * @param petersburg_block Petersburg switch block (nil same as Constantinople)
     * @param istanbul_block Istanbul switch block (nil no fork, 0 = already on istanbul)
     * @param muir_glacier_block Eip-2384 (bomb delay) switch block (nil no fork, 0 = already activated)
     * @param berlin_block Berlin switch block (nil = no fork, 0 = already on berlin)
     * @param london_block London switch block (nil = no fork, 0 = already on london)
     * @param arrow_glacier_block Eip-4345 (bomb delay) switch block (nil = no fork, 0 = already activated)
     * @param gray_glacier_block EIP-5133 (bomb delay) switch block (nil = no fork, 0 = already activated)
     * @param merge_netsplit_block Virtual fork after The Merge to use as a network splitter
     * @param shanghai_block switch block (nil = no fork, 0 = already on shanghai)
     * @param cancun_block switch block (nil = no fork, 0 = already on cancun)
     */
    function EvmChainConfigV1(homestead_block, dao_fork_block, dao_fork_support, eip150_block, eip150_hash, eip155_block, eip158_block, byzantium_block, constantinople_block, petersburg_block, istanbul_block, muir_glacier_block, berlin_block, london_block, arrow_glacier_block, gray_glacier_block, merge_netsplit_block, shanghai_block, cancun_block) {
        var _this = _super.call(this) || this;
        _this.dao_fork_support = dao_fork_support;
        _this.eip150_hash = eip150_hash;
        _this.homestead_block = new numeric_1.Int(homestead_block);
        _this.dao_fork_block = new numeric_1.Int(dao_fork_block);
        _this.eip150_block = new numeric_1.Int(eip150_block);
        _this.eip155_block = new numeric_1.Int(eip155_block);
        _this.eip158_block = new numeric_1.Int(eip158_block);
        _this.byzantium_block = new numeric_1.Int(byzantium_block);
        _this.constantinople_block = new numeric_1.Int(constantinople_block);
        _this.petersburg_block = new numeric_1.Int(petersburg_block);
        _this.istanbul_block = new numeric_1.Int(istanbul_block);
        _this.muir_glacier_block = new numeric_1.Int(muir_glacier_block);
        _this.berlin_block = new numeric_1.Int(berlin_block);
        _this.london_block = new numeric_1.Int(london_block);
        _this.arrow_glacier_block = new numeric_1.Int(arrow_glacier_block);
        _this.gray_glacier_block = new numeric_1.Int(gray_glacier_block);
        _this.merge_netsplit_block = new numeric_1.Int(merge_netsplit_block);
        _this.shanghai_block = new numeric_1.Int(shanghai_block);
        _this.cancun_block = new numeric_1.Int(cancun_block);
        return _this;
    }
    EvmChainConfigV1.fromAmino = function (data, _) {
        var homestead_block = data.homestead_block, dao_fork_block = data.dao_fork_block, dao_fork_support = data.dao_fork_support, eip150_block = data.eip150_block, eip150_hash = data.eip150_hash, eip155_block = data.eip155_block, eip158_block = data.eip158_block, byzantium_block = data.byzantium_block, constantinople_block = data.constantinople_block, petersburg_block = data.petersburg_block, istanbul_block = data.istanbul_block, muir_glacier_block = data.muir_glacier_block, berlin_block = data.berlin_block, london_block = data.london_block, arrow_glacier_block = data.arrow_glacier_block, gray_glacier_block = data.gray_glacier_block, merge_netsplit_block = data.merge_netsplit_block, shanghai_block = data.shanghai_block, cancun_block = data.cancun_block;
        return new EvmChainConfigV1(homestead_block !== null && homestead_block !== void 0 ? homestead_block : 0, dao_fork_block !== null && dao_fork_block !== void 0 ? dao_fork_block : 0, dao_fork_support !== null && dao_fork_support !== void 0 ? dao_fork_support : true, eip150_block !== null && eip150_block !== void 0 ? eip150_block : 0, eip150_hash !== null && eip150_hash !== void 0 ? eip150_hash : '0x0000000000000000000000000000000000000000000000000000000000000000', eip155_block !== null && eip155_block !== void 0 ? eip155_block : 0, eip158_block !== null && eip158_block !== void 0 ? eip158_block : 0, byzantium_block !== null && byzantium_block !== void 0 ? byzantium_block : 0, constantinople_block !== null && constantinople_block !== void 0 ? constantinople_block : 0, petersburg_block !== null && petersburg_block !== void 0 ? petersburg_block : 0, istanbul_block !== null && istanbul_block !== void 0 ? istanbul_block : 0, muir_glacier_block !== null && muir_glacier_block !== void 0 ? muir_glacier_block : 0, berlin_block !== null && berlin_block !== void 0 ? berlin_block : 0, london_block !== null && london_block !== void 0 ? london_block : 0, arrow_glacier_block !== null && arrow_glacier_block !== void 0 ? arrow_glacier_block : 0, gray_glacier_block !== null && gray_glacier_block !== void 0 ? gray_glacier_block : 0, merge_netsplit_block !== null && merge_netsplit_block !== void 0 ? merge_netsplit_block : 0, shanghai_block !== null && shanghai_block !== void 0 ? shanghai_block : 0, cancun_block !== null && cancun_block !== void 0 ? cancun_block : 0);
    };
    EvmChainConfigV1.prototype.toAmino = function (_) {
        var _a = this, homestead_block = _a.homestead_block, dao_fork_block = _a.dao_fork_block, dao_fork_support = _a.dao_fork_support, eip150_block = _a.eip150_block, eip150_hash = _a.eip150_hash, eip155_block = _a.eip155_block, eip158_block = _a.eip158_block, byzantium_block = _a.byzantium_block, constantinople_block = _a.constantinople_block, petersburg_block = _a.petersburg_block, istanbul_block = _a.istanbul_block, muir_glacier_block = _a.muir_glacier_block, berlin_block = _a.berlin_block, london_block = _a.london_block, arrow_glacier_block = _a.arrow_glacier_block, gray_glacier_block = _a.gray_glacier_block, merge_netsplit_block = _a.merge_netsplit_block, shanghai_block = _a.shanghai_block, cancun_block = _a.cancun_block;
        var res = {
            homestead_block: homestead_block.toFixed(),
            dao_fork_block: dao_fork_block.toFixed(),
            dao_fork_support: dao_fork_support,
            eip150_block: eip150_block.toFixed(),
            eip150_hash: eip150_hash,
            eip155_block: eip155_block.toFixed(),
            eip158_block: eip158_block.toFixed(),
            byzantium_block: byzantium_block.toFixed(),
            constantinople_block: constantinople_block.toFixed(),
            petersburg_block: petersburg_block.toFixed(),
            istanbul_block: istanbul_block.toFixed(),
            muir_glacier_block: muir_glacier_block.toFixed(),
            berlin_block: berlin_block.toFixed(),
            london_block: london_block.toFixed(),
            arrow_glacier_block: arrow_glacier_block.toFixed(),
            gray_glacier_block: gray_glacier_block.toFixed(),
            merge_netsplit_block: merge_netsplit_block.toFixed(),
            shanghai_block: shanghai_block.toFixed(),
            cancun_block: cancun_block.toFixed(),
        };
        return res;
    };
    EvmChainConfigV1.fromData = function (data, _) {
        var homestead_block = data.homestead_block, dao_fork_block = data.dao_fork_block, dao_fork_support = data.dao_fork_support, eip150_block = data.eip150_block, eip150_hash = data.eip150_hash, eip155_block = data.eip155_block, eip158_block = data.eip158_block, byzantium_block = data.byzantium_block, constantinople_block = data.constantinople_block, petersburg_block = data.petersburg_block, istanbul_block = data.istanbul_block, muir_glacier_block = data.muir_glacier_block, berlin_block = data.berlin_block, london_block = data.london_block, arrow_glacier_block = data.arrow_glacier_block, gray_glacier_block = data.gray_glacier_block, merge_netsplit_block = data.merge_netsplit_block, shanghai_block = data.shanghai_block, cancun_block = data.cancun_block;
        return new EvmChainConfigV1(homestead_block, dao_fork_block, dao_fork_support, eip150_block, eip150_hash, eip155_block, eip158_block, byzantium_block, constantinople_block, petersburg_block, istanbul_block, muir_glacier_block, berlin_block, london_block, arrow_glacier_block, gray_glacier_block, merge_netsplit_block, shanghai_block, cancun_block);
    };
    EvmChainConfigV1.prototype.toData = function (_) {
        var _a = this, homestead_block = _a.homestead_block, dao_fork_block = _a.dao_fork_block, dao_fork_support = _a.dao_fork_support, eip150_block = _a.eip150_block, eip150_hash = _a.eip150_hash, eip155_block = _a.eip155_block, eip158_block = _a.eip158_block, byzantium_block = _a.byzantium_block, constantinople_block = _a.constantinople_block, petersburg_block = _a.petersburg_block, istanbul_block = _a.istanbul_block, muir_glacier_block = _a.muir_glacier_block, berlin_block = _a.berlin_block, london_block = _a.london_block, arrow_glacier_block = _a.arrow_glacier_block, gray_glacier_block = _a.gray_glacier_block, merge_netsplit_block = _a.merge_netsplit_block, shanghai_block = _a.shanghai_block, cancun_block = _a.cancun_block;
        var res = {
            '@type': '/ethermint.evm.v1.Params',
            homestead_block: homestead_block.toFixed(),
            dao_fork_block: dao_fork_block.toFixed(),
            dao_fork_support: dao_fork_support,
            eip150_block: eip150_block.toFixed(),
            eip150_hash: eip150_hash,
            eip155_block: eip155_block.toFixed(),
            eip158_block: eip158_block.toFixed(),
            byzantium_block: byzantium_block.toFixed(),
            constantinople_block: constantinople_block.toFixed(),
            petersburg_block: petersburg_block.toFixed(),
            istanbul_block: istanbul_block.toFixed(),
            muir_glacier_block: muir_glacier_block.toFixed(),
            berlin_block: berlin_block.toFixed(),
            london_block: london_block.toFixed(),
            arrow_glacier_block: arrow_glacier_block.toFixed(),
            gray_glacier_block: gray_glacier_block.toFixed(),
            merge_netsplit_block: merge_netsplit_block.toFixed(),
            shanghai_block: shanghai_block.toFixed(),
            cancun_block: cancun_block.toFixed(),
        };
        return res;
    };
    EvmChainConfigV1.fromProto = function (proto, _) {
        return new EvmChainConfigV1(proto.homesteadBlock, proto.daoForkBlock, proto.daoForkSupport, proto.eip150Block, proto.eip150Hash, proto.eip155Block, proto.eip158Block, proto.byzantiumBlock, proto.constantinopleBlock, proto.petersburgBlock, proto.istanbulBlock, proto.muirGlacierBlock, proto.berlinBlock, proto.londonBlock, proto.arrowGlacierBlock, proto.grayGlacierBlock, proto.mergeNetsplitBlock, proto.shanghaiBlock, proto.cancunBlock);
    };
    EvmChainConfigV1.prototype.toProto = function (_) {
        var _a = this, homestead_block = _a.homestead_block, dao_fork_block = _a.dao_fork_block, dao_fork_support = _a.dao_fork_support, eip150_block = _a.eip150_block, eip150_hash = _a.eip150_hash, eip155_block = _a.eip155_block, eip158_block = _a.eip158_block, byzantium_block = _a.byzantium_block, constantinople_block = _a.constantinople_block, petersburg_block = _a.petersburg_block, istanbul_block = _a.istanbul_block, muir_glacier_block = _a.muir_glacier_block, berlin_block = _a.berlin_block, london_block = _a.london_block, arrow_glacier_block = _a.arrow_glacier_block, gray_glacier_block = _a.gray_glacier_block, merge_netsplit_block = _a.merge_netsplit_block, shanghai_block = _a.shanghai_block, cancun_block = _a.cancun_block;
        return evm_1.ChainConfig.fromPartial({
            homesteadBlock: homestead_block.toFixed(),
            daoForkBlock: dao_fork_block.toFixed(),
            daoForkSupport: dao_fork_support,
            eip150Block: eip150_block.toFixed(),
            eip150Hash: eip150_hash,
            eip155Block: eip155_block.toFixed(),
            eip158Block: eip158_block.toFixed(),
            byzantiumBlock: byzantium_block.toFixed(),
            constantinopleBlock: constantinople_block.toFixed(),
            petersburgBlock: petersburg_block.toFixed(),
            istanbulBlock: istanbul_block.toFixed(),
            muirGlacierBlock: muir_glacier_block.toFixed(),
            berlinBlock: berlin_block.toFixed(),
            londonBlock: london_block.toFixed(),
            arrowGlacierBlock: arrow_glacier_block.toFixed(),
            grayGlacierBlock: gray_glacier_block.toFixed(),
            mergeNetsplitBlock: merge_netsplit_block.toFixed(),
            shanghaiBlock: shanghai_block.toFixed(),
            cancunBlock: cancun_block.toFixed(),
        });
    };
    return EvmChainConfigV1;
}(json_1.JSONSerializable));
exports.EvmChainConfigV1 = EvmChainConfigV1;
//# sourceMappingURL=Params.js.map