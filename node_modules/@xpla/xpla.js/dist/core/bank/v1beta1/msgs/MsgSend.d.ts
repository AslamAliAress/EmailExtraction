import { JSONSerializable } from '../../../../util/json';
import { Coins } from '../../../Coins';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgSend as MsgSendV1B1_pb } from '@xpla/xpla.proto/cosmos/bank/v1beta1/tx';
/**
 * A basic message for sending [[Coins]] between Xpla accounts.
 */
export declare class MsgSendV1B1 extends JSONSerializable<MsgSendV1B1.Amino, MsgSendV1B1.Data, MsgSendV1B1.Proto> {
    from_address: AccAddress;
    to_address: AccAddress;
    /**
     * value of the transaction
     */
    amount: Coins;
    /**
     * @param from_address sender's address
     * @param to_address recipient's address
     * @param amount value of the transaction
     */
    constructor(from_address: AccAddress, to_address: AccAddress, amount: Coins.Input);
    static fromAmino(data: MsgSendV1B1.Amino, _isClassic?: boolean): MsgSendV1B1;
    toAmino(isClassic?: boolean): MsgSendV1B1.Amino;
    static fromData(data: MsgSendV1B1.Data, _isClassic?: boolean): MsgSendV1B1;
    toData(_isClassic?: boolean): MsgSendV1B1.Data;
    static fromProto(proto: MsgSendV1B1.Proto, _isClassic?: boolean): MsgSendV1B1;
    toProto(_isClassic?: boolean): MsgSendV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgSendV1B1;
}
export declare namespace MsgSendV1B1 {
    interface Amino {
        type: 'bank/MsgSend' | 'cosmos-sdk/MsgSend';
        value: {
            from_address: AccAddress;
            to_address: AccAddress;
            amount: Coins.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.bank.v1beta1.MsgSend';
        from_address: AccAddress;
        to_address: AccAddress;
        amount: Coins.Data;
    }
    type Proto = MsgSendV1B1_pb;
}
