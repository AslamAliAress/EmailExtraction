"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgSetSendEnabledV1B1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../../util/json");
var any_1 = require("@xpla/xpla.proto/google/protobuf/any");
var tx_1 = require("@xpla/xpla.proto/cosmos/bank/v1beta1/tx");
/**
 * A basic message for sending [[Coins]] between Xpla accounts.
 */
var MsgSetSendEnabledV1B1 = /** @class */ (function (_super) {
    __extends(MsgSetSendEnabledV1B1, _super);
    /**
     * @param authority
     * @param send_enabled is the list of entries to add or update
     * @param use_default_for is a list of denoms that should use the params.default_send_enabled value
     */
    function MsgSetSendEnabledV1B1(authority, send_enabled, use_default_for) {
        var _this = _super.call(this) || this;
        _this.authority = authority;
        _this.send_enabled = send_enabled;
        _this.use_default_for = use_default_for;
        return _this;
    }
    MsgSetSendEnabledV1B1.fromAmino = function (data, _isClassic) {
        var _a = data.value, authority = _a.authority, send_enabled = _a.send_enabled, use_default_for = _a.use_default_for;
        return new MsgSetSendEnabledV1B1(authority, send_enabled, use_default_for);
    };
    MsgSetSendEnabledV1B1.prototype.toAmino = function (isClassic) {
        var _a = this, authority = _a.authority, send_enabled = _a.send_enabled, use_default_for = _a.use_default_for;
        return {
            type: isClassic
                ? 'bank/MsgSetSendEnabled'
                : 'cosmos-sdk/MsgSetSendEnabled',
            value: {
                authority: authority,
                send_enabled: send_enabled,
                use_default_for: use_default_for,
            },
        };
    };
    MsgSetSendEnabledV1B1.fromData = function (data, _isClassic) {
        var authority = data.authority, send_enabled = data.send_enabled, use_default_for = data.use_default_for;
        return new MsgSetSendEnabledV1B1(authority, send_enabled, use_default_for);
    };
    MsgSetSendEnabledV1B1.prototype.toData = function (_isClassic) {
        var _a = this, authority = _a.authority, send_enabled = _a.send_enabled, use_default_for = _a.use_default_for;
        return {
            '@type': '/cosmos.bank.v1beta1.MsgSetSendEnabled',
            authority: authority,
            send_enabled: send_enabled,
            use_default_for: use_default_for,
        };
    };
    MsgSetSendEnabledV1B1.fromProto = function (proto, _isClassic) {
        return new MsgSetSendEnabledV1B1(proto.authority, proto.sendEnabled, proto.useDefaultFor);
    };
    MsgSetSendEnabledV1B1.prototype.toProto = function (_isClassic) {
        var _a = this, authority = _a.authority, send_enabled = _a.send_enabled, use_default_for = _a.use_default_for;
        return tx_1.MsgSetSendEnabled.fromPartial({
            authority: authority,
            sendEnabled: send_enabled,
            useDefaultFor: use_default_for,
        });
    };
    MsgSetSendEnabledV1B1.prototype.packAny = function (isClassic) {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmos.bank.v1beta1.MsgSetSendEnabled',
            value: tx_1.MsgSetSendEnabled.encode(this.toProto(isClassic)).finish(),
        });
    };
    MsgSetSendEnabledV1B1.unpackAny = function (msgAny, isClassic) {
        return MsgSetSendEnabledV1B1.fromProto(tx_1.MsgSetSendEnabled.decode(msgAny.value), isClassic);
    };
    return MsgSetSendEnabledV1B1;
}(json_1.JSONSerializable));
exports.MsgSetSendEnabledV1B1 = MsgSetSendEnabledV1B1;
//# sourceMappingURL=MsgSetSendEnabled.js.map