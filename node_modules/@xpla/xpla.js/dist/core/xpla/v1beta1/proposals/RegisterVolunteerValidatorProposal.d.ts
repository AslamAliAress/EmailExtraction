import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { Coin } from '@xpla/xpla.proto/cosmos/base/v1beta1/coin';
import { Description } from '@xpla/xpla.proto/cosmos/staking/v1beta1/staking';
import { RegisterVolunteerValidatorProposal as RegisterVolunteerValidatorProposal_pb } from '@xpla/xpla.proto/xpla/volunteer/v1beta1/proposal';
/**
 * Basic proposal which describes the candidate proposition that must be put into effect
 * manually if passed. Used as a general-purpose way of discovering community's
 * sentiment / interest for an arbitrary change.
 */
export declare class RegisterVolunteerValidatorProposal extends JSONSerializable<RegisterVolunteerValidatorProposal.Amino, RegisterVolunteerValidatorProposal.Data, RegisterVolunteerValidatorProposal.Proto> {
    title: string;
    description: string;
    validatorDescription: Description | undefined;
    delegatorAddress: string;
    validatorAddress: string;
    pubkey: Any | undefined;
    amount: Coin | undefined;
    /**
     * @param title proposal's title
     * @param description proposal's description
     */
    constructor(title: string, description: string, validatorDescription: Description | undefined, delegatorAddress: string, validatorAddress: string, pubkey: Any | undefined, amount: Coin | undefined);
    static fromAmino(data: RegisterVolunteerValidatorProposal.Amino, _isClassic?: boolean): RegisterVolunteerValidatorProposal;
    toAmino(_isClassic?: boolean): RegisterVolunteerValidatorProposal.Amino;
    static fromData(proto: RegisterVolunteerValidatorProposal.Data, _isClassic?: boolean): RegisterVolunteerValidatorProposal;
    toData(_isClassic?: boolean): RegisterVolunteerValidatorProposal.Data;
    static fromProto(proto: RegisterVolunteerValidatorProposal.Proto, _isClassic?: boolean): RegisterVolunteerValidatorProposal;
    toProto(_isClassic?: boolean): RegisterVolunteerValidatorProposal.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): RegisterVolunteerValidatorProposal;
}
export declare namespace RegisterVolunteerValidatorProposal {
    interface Amino {
        type: 'xpla/RegisterVolunteerValidatorProposal';
        value: {
            title: string;
            description: string;
            validatorDescription: Description | undefined;
            delegatorAddress: AccAddress;
            validatorAddress: AccAddress;
            pubkey: Any | undefined;
            amount: Coin | undefined;
        };
    }
    interface Data {
        '@type': '/xpla.volunteer.v1beta1.RegisterVolunteerValidatorProposal';
        title: string;
        description: string;
        validatorDescription: Description | undefined;
        delegatorAddress: AccAddress;
        validatorAddress: AccAddress;
        pubkey: Any | undefined;
        amount: Coin | undefined;
    }
    type Proto = RegisterVolunteerValidatorProposal_pb;
}
