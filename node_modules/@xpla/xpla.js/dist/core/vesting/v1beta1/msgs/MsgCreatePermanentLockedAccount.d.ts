import { JSONSerializable } from '../../../../util/json';
import { Coins } from '../../../Coins';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgCreatePermanentLockedAccount as MsgCreatePermanentLockedAccountV1B1_pb } from '@xpla/xpla.proto/cosmos/vesting/v1beta1/tx';
export declare class MsgCreatePermanentLockedAccountV1B1 extends JSONSerializable<MsgCreatePermanentLockedAccountV1B1.Amino, MsgCreatePermanentLockedAccountV1B1.Data, MsgCreatePermanentLockedAccountV1B1.Proto> {
    from_address: AccAddress;
    to_address: AccAddress;
    amount: Coins;
    /**
     * @param from_address sender's address
     * @param to_address recipient's address
     * @param amount value of the transaction
     */
    constructor(from_address: AccAddress, to_address: AccAddress, amount: Coins.Input);
    static fromAmino(data: MsgCreatePermanentLockedAccountV1B1.Amino, isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1;
    toAmino(isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1.Amino;
    static fromData(data: MsgCreatePermanentLockedAccountV1B1.Data, isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1;
    toData(isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1.Data;
    static fromProto(proto: MsgCreatePermanentLockedAccountV1B1.Proto, isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1;
    toProto(isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgCreatePermanentLockedAccountV1B1;
}
export declare namespace MsgCreatePermanentLockedAccountV1B1 {
    interface Amino {
        type: 'vesting/MsgCreatePermanentLockedAccount' | 'cosmos-sdk/MsgCreatePermanentLockedAccount';
        value: {
            from_address: AccAddress;
            to_address: AccAddress;
            amount: Coins.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount';
        from_address: AccAddress;
        to_address: AccAddress;
        amount: Coins.Data;
    }
    type Proto = MsgCreatePermanentLockedAccountV1B1_pb;
}
