import { JSONSerializable } from '../../../../util/json';
import { ValAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgWithdrawValidatorCommission as MsgWithdrawValidatorCommissionV1B1_pb } from '@xpla/xpla.proto/cosmos/distribution/v1beta1/tx';
/**
 * A validator can withdraw their outstanding commission rewards accrued from all
 * delegations (not including its self-delegation) into their associated account's
 * withdraw address.
 */
export declare class MsgWithdrawValidatorCommissionV1B1 extends JSONSerializable<MsgWithdrawValidatorCommissionV1B1.Amino, MsgWithdrawValidatorCommissionV1B1.Data, MsgWithdrawValidatorCommissionV1B1.Proto> {
    validator_address: ValAddress;
    /**
     * @param validator_address validator's operator address
     */
    constructor(validator_address: ValAddress);
    static fromAmino(data: MsgWithdrawValidatorCommissionV1B1.Amino, _isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1;
    toAmino(isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1.Amino;
    static fromData(proto: MsgWithdrawValidatorCommissionV1B1.Data, _isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1;
    toData(_isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1.Data;
    static fromProto(proto: MsgWithdrawValidatorCommissionV1B1.Proto, _isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1;
    toProto(_isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgWithdrawValidatorCommissionV1B1;
}
export declare namespace MsgWithdrawValidatorCommissionV1B1 {
    interface Amino {
        type: 'distribution/MsgWithdrawValidatorCommission' | 'cosmos-sdk/MsgWithdrawValCommission';
        value: {
            validator_address: ValAddress;
        };
    }
    interface Data {
        '@type': '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission';
        validator_address: ValAddress;
    }
    type Proto = MsgWithdrawValidatorCommissionV1B1_pb;
}
