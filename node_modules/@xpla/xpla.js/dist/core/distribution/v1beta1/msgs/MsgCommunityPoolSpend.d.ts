import { JSONSerializable } from '../../../../util/json';
import { Coins } from '../../../Coins';
import { ValAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgCommunityPoolSpend as MsgCommunityPoolSpendV1B1_pb } from '@xpla/xpla.proto/cosmos/distribution/v1beta1/tx';
export declare class MsgCommunityPoolSpendV1B1 extends JSONSerializable<MsgCommunityPoolSpendV1B1.Amino, MsgCommunityPoolSpendV1B1.Data, MsgCommunityPoolSpendV1B1.Proto> {
    authority: ValAddress;
    recipient: ValAddress;
    /**
     * value of the transaction
     */
    amount: Coins;
    /**
     * @param validator_address validator's operator address
     */
    constructor(authority: ValAddress, recipient: ValAddress, amount: Coins.Input);
    static fromAmino(data: MsgCommunityPoolSpendV1B1.Amino, _isClassic?: boolean): MsgCommunityPoolSpendV1B1;
    toAmino(isClassic?: boolean): MsgCommunityPoolSpendV1B1.Amino;
    static fromData(proto: MsgCommunityPoolSpendV1B1.Data, _isClassic?: boolean): MsgCommunityPoolSpendV1B1;
    toData(_isClassic?: boolean): MsgCommunityPoolSpendV1B1.Data;
    static fromProto(proto: MsgCommunityPoolSpendV1B1.Proto, _isClassic?: boolean): MsgCommunityPoolSpendV1B1;
    toProto(_isClassic?: boolean): MsgCommunityPoolSpendV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgCommunityPoolSpendV1B1;
}
export declare namespace MsgCommunityPoolSpendV1B1 {
    interface Amino {
        type: 'distribution/MsgCommunityPoolSpend' | 'cosmos-sdk/distr/MsgCommunityPoolSpend';
        value: {
            authority: ValAddress;
            recipient: ValAddress;
            amount: Coins.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.distribution.v1beta1.MsgCommunityPoolSpend';
        authority: ValAddress;
        recipient: ValAddress;
        amount: Coins.Data;
    }
    type Proto = MsgCommunityPoolSpendV1B1_pb;
}
