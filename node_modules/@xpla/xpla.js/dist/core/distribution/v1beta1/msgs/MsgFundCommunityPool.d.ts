import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Coins } from '../../../Coins';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgFundCommunityPool as MsgFundCommunityPoolV1B1_pb } from '@xpla/xpla.proto/cosmos/distribution/v1beta1/tx';
export declare class MsgFundCommunityPoolV1B1 extends JSONSerializable<MsgFundCommunityPoolV1B1.Amino, MsgFundCommunityPoolV1B1.Data, MsgFundCommunityPoolV1B1.Proto> {
    depositor: AccAddress;
    amount: Coins;
    /**
     * @param depositor depositor's account address
     * @param amount coins to fund the community pool
     */
    constructor(depositor: AccAddress, amount: Coins.Input);
    static fromAmino(data: MsgFundCommunityPoolV1B1.Amino, _isClassic?: boolean): MsgFundCommunityPoolV1B1;
    toAmino(isClassic?: boolean): MsgFundCommunityPoolV1B1.Amino;
    static fromData(proto: MsgFundCommunityPoolV1B1.Data, _isClassic?: boolean): MsgFundCommunityPoolV1B1;
    toData(_isClassic?: boolean): MsgFundCommunityPoolV1B1.Data;
    static fromProto(proto: MsgFundCommunityPoolV1B1.Proto, _isClassic?: Boolean): MsgFundCommunityPoolV1B1;
    toProto(_isClassic?: boolean): MsgFundCommunityPoolV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgFundCommunityPoolV1B1;
}
export declare namespace MsgFundCommunityPoolV1B1 {
    interface Amino {
        type: 'distribution/MsgFundCommunityPool' | 'cosmos-sdk/MsgFundCommunityPool';
        value: {
            depositor: AccAddress;
            amount: Coins.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.distribution.v1beta1.MsgFundCommunityPool';
        depositor: AccAddress;
        amount: Coins.Data;
    }
    type Proto = MsgFundCommunityPoolV1B1_pb;
}
