import { JSONSerializable } from '../../../../util/json';
import { PlanV1B1 } from '../Plan';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { SoftwareUpgradeProposal as SoftwareUpgradeProposalV1B1_pb } from '@xpla/xpla.proto/cosmos/upgrade/v1beta1/upgrade';
/**
 * Softwareupgradeproposal is a gov Content type for initiating a software upgrade.
 */
export declare class SoftwareUpgradeProposalV1B1 extends JSONSerializable<SoftwareUpgradeProposalV1B1.Amino, SoftwareUpgradeProposalV1B1.Data, SoftwareUpgradeProposalV1B1.Proto> {
    title: string;
    description: string;
    plan?: PlanV1B1 | undefined;
    /**
     *
     * @param title
     * @param description
     * @param plan
     */
    constructor(title: string, description: string, plan?: PlanV1B1 | undefined);
    static fromAmino(data: SoftwareUpgradeProposalV1B1.Amino, _isClassic?: boolean): SoftwareUpgradeProposalV1B1;
    toAmino(isClassic?: boolean): SoftwareUpgradeProposalV1B1.Amino;
    static fromData(data: SoftwareUpgradeProposalV1B1.Data, _isClassic?: boolean): SoftwareUpgradeProposalV1B1;
    toData(_isClassic?: boolean): SoftwareUpgradeProposalV1B1.Data;
    static fromProto(proto: SoftwareUpgradeProposalV1B1.Proto, _isClassic?: boolean): SoftwareUpgradeProposalV1B1;
    toProto(_isClassic?: boolean): SoftwareUpgradeProposalV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): SoftwareUpgradeProposalV1B1;
}
export declare namespace SoftwareUpgradeProposalV1B1 {
    interface Amino {
        type: 'upgrade/SoftwareUpgradeProposal' | 'cosmos-sdk/SoftwareUpgradeProposal';
        value: {
            title: string;
            description: string;
            plan?: PlanV1B1.Amino;
        };
    }
    interface Data {
        '@type': '/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal';
        title: string;
        description: string;
        plan?: PlanV1B1.Data;
    }
    type Proto = SoftwareUpgradeProposalV1B1_pb;
}
