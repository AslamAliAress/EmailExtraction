import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { PlanV1B1 } from '../Plan';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgSoftwareUpgrade as MsgSoftwareUpgradeV1B1_pb } from '@xpla/xpla.proto/cosmos/upgrade/v1beta1/tx';
export declare class MsgSoftwareUpgradeV1B1 extends JSONSerializable<MsgSoftwareUpgradeV1B1.Amino, MsgSoftwareUpgradeV1B1.Data, MsgSoftwareUpgradeV1B1.Proto> {
    authority: AccAddress;
    plan: PlanV1B1 | undefined;
    /**
     * @param authority is the address that controls the module
     * @param plan is the upgrade plan
     */
    constructor(authority: AccAddress, plan: PlanV1B1 | undefined);
    static fromAmino(data: MsgSoftwareUpgradeV1B1.Amino, _isClassic?: boolean): MsgSoftwareUpgradeV1B1;
    toAmino(isClassic?: boolean): MsgSoftwareUpgradeV1B1.Amino;
    static fromData(data: MsgSoftwareUpgradeV1B1.Data, _isClassic?: boolean): MsgSoftwareUpgradeV1B1;
    toData(_isClassic?: boolean): MsgSoftwareUpgradeV1B1.Data;
    static fromProto(proto: MsgSoftwareUpgradeV1B1.Proto, _isClassic?: boolean): MsgSoftwareUpgradeV1B1;
    toProto(_isClassic?: boolean): MsgSoftwareUpgradeV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgSoftwareUpgradeV1B1;
}
export declare namespace MsgSoftwareUpgradeV1B1 {
    interface Amino {
        type: 'upgrade/MsgSoftwareUpgrade' | 'cosmos-sdk/MsgSoftwareUpgrade';
        value: {
            authority: AccAddress;
            plan: PlanV1B1.Amino | undefined;
        };
    }
    interface Data {
        '@type': '/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade';
        authority: AccAddress;
        plan: PlanV1B1.Data | undefined;
    }
    type Proto = MsgSoftwareUpgradeV1B1_pb;
}
