import { JSONSerializable } from '../../../util/json';
import { Plan as PlanV1B1_pb } from '@xpla/xpla.proto/cosmos/upgrade/v1beta1/upgrade';
export declare class PlanV1B1 extends JSONSerializable<PlanV1B1.Amino, PlanV1B1.Data, PlanV1B1.Proto> {
    name: string;
    time?: Date;
    height: string;
    info: string;
    upgraded_client_state?: any;
    /**
     * @param name This name will be used by the upgraded  version of the software to apply any special "on-upgrade" commands during the first BeginBlock method after the upgrade is applied.
     * @param time Deprecated
     * @param height  The height at which the upgrade must be performed. Only used if Time is not set.
     * @param info Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to
     * @param upgraded_client_state Deprecated
     */
    constructor(name: string, time: Date | undefined, height: string, info: string, upgraded_client_state: any);
    static fromAmino(data: PlanV1B1.Amino): PlanV1B1;
    toAmino(): PlanV1B1.Amino;
    static fromData(data: PlanV1B1.Data): PlanV1B1;
    toData(): PlanV1B1.Data;
    static fromProto(proto: PlanV1B1.Proto): PlanV1B1;
    toProto(): PlanV1B1.Proto;
}
export declare namespace PlanV1B1 {
    interface Amino {
        name: string;
        time?: string;
        height: string;
        info: string;
        upgraded_client_state?: any;
    }
    interface Data {
        name: string;
        time?: string;
        height: string;
        info: string;
        upgraded_client_state?: any;
    }
    type Proto = PlanV1B1_pb;
}
