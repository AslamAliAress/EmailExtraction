import { JSONSerializable } from '../../../../util/json';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { ToggleTokenConversionProposal as ToggleTokenConversionProposal_pb } from '@xpla/xpla.proto/ethermint/erc20/v1/erc20';
/**
 * erc20 ToggleTokenConversionProposal
 */
export declare class ToggleTokenConversionProposal extends JSONSerializable<ToggleTokenConversionProposal.Amino, ToggleTokenConversionProposal.Data, ToggleTokenConversionProposal.Proto> {
    title: string;
    description: string;
    token: string;
    /**
     * @param title title of the proposal
     * @param description proposal description
     * @param token token identifier can be either the hex contract address of the ERC20 or the Cosmos base denomination
     */
    constructor(title: string, description: string, token: string);
    static fromAmino(data: ToggleTokenConversionProposal.Amino, _isClassic?: boolean): ToggleTokenConversionProposal;
    toAmino(_isClassic?: boolean): ToggleTokenConversionProposal.Amino;
    static fromData(data: ToggleTokenConversionProposal.Data, _isClassic?: boolean): ToggleTokenConversionProposal;
    toData(_isClassic?: boolean): ToggleTokenConversionProposal.Data;
    static fromProto(proto: ToggleTokenConversionProposal.Proto, _isClassic?: boolean): ToggleTokenConversionProposal;
    toProto(_isClassic?: boolean): ToggleTokenConversionProposal.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): ToggleTokenConversionProposal;
}
export declare namespace ToggleTokenConversionProposal {
    interface Amino {
        type: 'erc20/ToggleTokenConversionProposal';
        value: {
            title: string;
            description: string;
            token: string;
        };
    }
    interface Data {
        '@type': '/ethermint.erc20.v1.ToggleTokenConversionProposal' | '/evmos.erc20.v1.ToggleTokenConversionProposal';
        title: string;
        description: string;
        token: string;
    }
    type Proto = ToggleTokenConversionProposal_pb;
}
