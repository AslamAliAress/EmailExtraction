"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20ParamsV1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../util/json");
var genesis_1 = require("@xpla/xpla.proto/ethermint/erc20/v1/genesis");
var ERC20ParamsV1 = /** @class */ (function (_super) {
    __extends(ERC20ParamsV1, _super);
    /**
     * @param enable_erc20 is the parameter to enable the conversion of Cosmos coins <--> ERC20 tokens
     * @param enable_evm_hook is the parameter to enable the EVM hook that converts an ERC20 token to a Cosmos Coin by transferring the Tokens through a MsgEthereumTx to the ModuleAddress Ethereum address
     */
    function ERC20ParamsV1(enable_erc20, enable_evm_hook) {
        var _this = _super.call(this) || this;
        _this.enable_erc20 = enable_erc20;
        _this.enable_evm_hook = enable_evm_hook;
        return _this;
    }
    ERC20ParamsV1.fromAmino = function (data, _) {
        var enable_erc20 = data.enable_erc20, enable_evm_hook = data.enable_evm_hook;
        return new ERC20ParamsV1(enable_erc20 !== null && enable_erc20 !== void 0 ? enable_erc20 : false, enable_evm_hook !== null && enable_evm_hook !== void 0 ? enable_evm_hook : false);
    };
    ERC20ParamsV1.prototype.toAmino = function (_) {
        var _a = this, enable_erc20 = _a.enable_erc20, enable_evm_hook = _a.enable_evm_hook;
        var res = {
            enable_erc20: enable_erc20,
            enable_evm_hook: enable_evm_hook,
        };
        return res;
    };
    ERC20ParamsV1.fromData = function (data, _) {
        var enable_erc20 = data.enable_erc20, enable_evm_hook = data.enable_evm_hook;
        return new ERC20ParamsV1(enable_erc20, enable_evm_hook);
    };
    ERC20ParamsV1.prototype.toData = function (_) {
        var _a = this, enable_erc20 = _a.enable_erc20, enable_evm_hook = _a.enable_evm_hook;
        var res = {
            '@type': '/ethermint.erc20.v1.Params',
            enable_erc20: enable_erc20,
            enable_evm_hook: enable_evm_hook,
        };
        return res;
    };
    ERC20ParamsV1.fromProto = function (proto, _) {
        return new ERC20ParamsV1(proto.enableErc20, proto.enableEvmHook);
    };
    ERC20ParamsV1.prototype.toProto = function (_) {
        var _a = this, enable_erc20 = _a.enable_erc20, enable_evm_hook = _a.enable_evm_hook;
        return genesis_1.Params.fromPartial({
            enableErc20: enable_erc20,
            enableEvmHook: enable_evm_hook,
        });
    };
    return ERC20ParamsV1;
}(json_1.JSONSerializable));
exports.ERC20ParamsV1 = ERC20ParamsV1;
//# sourceMappingURL=Params.js.map