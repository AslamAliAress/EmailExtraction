import { JSONSerializable } from '../../../util/json';
import { Params as ERC20ParamsV1_pb } from '@xpla/xpla.proto/ethermint/erc20/v1/genesis';
export declare class ERC20ParamsV1 extends JSONSerializable<ERC20ParamsV1.Amino, ERC20ParamsV1.Data, ERC20ParamsV1.Proto> {
    enable_erc20: boolean;
    enable_evm_hook: boolean;
    /**
     * @param enable_erc20 is the parameter to enable the conversion of Cosmos coins <--> ERC20 tokens
     * @param enable_evm_hook is the parameter to enable the EVM hook that converts an ERC20 token to a Cosmos Coin by transferring the Tokens through a MsgEthereumTx to the ModuleAddress Ethereum address
     */
    constructor(enable_erc20: boolean, enable_evm_hook: boolean);
    static fromAmino(data: ERC20ParamsV1.Amino, _?: boolean): ERC20ParamsV1;
    toAmino(_?: boolean): ERC20ParamsV1.Amino;
    static fromData(data: ERC20ParamsV1.Data, _?: boolean): ERC20ParamsV1;
    toData(_?: boolean): ERC20ParamsV1.Data;
    static fromProto(proto: ERC20ParamsV1.Proto, _?: boolean): ERC20ParamsV1;
    toProto(_?: boolean): ERC20ParamsV1.Proto;
}
export declare namespace ERC20ParamsV1 {
    interface Amino {
        enable_erc20: boolean | undefined;
        enable_evm_hook: boolean | undefined;
    }
    interface Data {
        '@type': '/ethermint.erc20.v1.Params';
        enable_erc20: boolean;
        enable_evm_hook: boolean;
    }
    type Proto = ERC20ParamsV1_pb;
}
