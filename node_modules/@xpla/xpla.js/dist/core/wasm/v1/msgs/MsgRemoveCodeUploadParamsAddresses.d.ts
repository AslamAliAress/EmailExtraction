import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgRemoveCodeUploadParamsAddresses as MsgRemoveCodeUploadParamsAddressesV1_pb } from '@xpla/xpla.proto/cosmwasm/wasm/v1/tx';
export declare class MsgRemoveCodeUploadParamsAddressesV1 extends JSONSerializable<MsgRemoveCodeUploadParamsAddressesV1.Amino, MsgRemoveCodeUploadParamsAddressesV1.Data, MsgRemoveCodeUploadParamsAddressesV1.Proto> {
    authority: AccAddress;
    addresses: AccAddress[];
    /**
     * @param authority is the address of the governance account
     * @param addresses
     */
    constructor(authority: AccAddress, addresses: AccAddress[]);
    static fromAmino(data: MsgRemoveCodeUploadParamsAddressesV1.Amino, _isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1;
    toAmino(_isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1.Amino;
    static fromProto(proto: MsgRemoveCodeUploadParamsAddressesV1.Proto, _isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1;
    toProto(_isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1;
    static fromData(data: MsgRemoveCodeUploadParamsAddressesV1.Data, _isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1;
    toData(_isClassic?: boolean): MsgRemoveCodeUploadParamsAddressesV1.Data;
}
export declare namespace MsgRemoveCodeUploadParamsAddressesV1 {
    interface Amino {
        type: 'wasm/MsgRemoveCodeUploadParamsAddresses';
        value: {
            authority: AccAddress;
            addresses: AccAddress[];
        };
    }
    interface Data {
        '@type': '/cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses';
        authority: AccAddress;
        addresses: AccAddress[];
    }
    type Proto = MsgRemoveCodeUploadParamsAddressesV1_pb;
}
