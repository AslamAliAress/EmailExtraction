"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgStoreAndInstantiateContractV1 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
var json_1 = require("../../../../util/json");
var Coins_1 = require("../../../Coins");
var AccessConfig_1 = require("../AccessConfig");
var any_1 = require("@xpla/xpla.proto/google/protobuf/any");
var tx_1 = require("@xpla/xpla.proto/cosmwasm/wasm/v1/tx");
var MsgStoreAndInstantiateContractV1 = /** @class */ (function (_super) {
    __extends(MsgStoreAndInstantiateContractV1, _super);
    /**
     * @param authority is the address of the governance account
     * @param wasm_byte_code base64-encoded bytecode contents
     * @param instantiate_permission to apply on contract creation, optional
     * @param unpin_code code on upload, optional. As default the uploaded contract is pinned to cache
     * @param admin is an optional address that can execute migrations
     * @param label is metadata to be stored with a constract instance
     * @param msg json encoded message to be passed to the contract on instantiation
     * @param funds coins that are transferred from the authority account to the contract on instantiation
     * @param source is the URL where the code is hosted
     * @param builder is the docker image used to build the code deterministically, used for smart contract verification
     * @param code_hash is the SHA256 sum of the code outputted by builder, used for smart contract verification
     */
    function MsgStoreAndInstantiateContractV1(authority, wasm_byte_code, instantiate_permission, unpin_code, admin, label, msg, funds, source, builder, code_hash) {
        if (funds === void 0) { funds = {}; }
        var _this = _super.call(this) || this;
        _this.authority = authority;
        _this.wasm_byte_code = wasm_byte_code;
        _this.instantiate_permission = instantiate_permission;
        _this.unpin_code = unpin_code;
        _this.admin = admin;
        _this.label = label;
        _this.msg = msg;
        _this.source = source;
        _this.builder = builder;
        _this.code_hash = code_hash;
        _this.funds = new Coins_1.Coins(funds);
        return _this;
    }
    MsgStoreAndInstantiateContractV1.fromAmino = function (data, _isClassic) {
        var _a = data.value, authority = _a.authority, wasm_byte_code = _a.wasm_byte_code, instantiate_permission = _a.instantiate_permission, unpin_code = _a.unpin_code, admin = _a.admin, label = _a.label, msg = _a.msg, funds = _a.funds, source = _a.source, builder = _a.builder, code_hash = _a.code_hash;
        return new MsgStoreAndInstantiateContractV1(authority, wasm_byte_code, instantiate_permission
            ? AccessConfig_1.AccessConfig.fromAmino(instantiate_permission)
            : undefined, unpin_code, admin, label, msg, Coins_1.Coins.fromAmino(funds), source, builder, code_hash);
    };
    MsgStoreAndInstantiateContractV1.prototype.toAmino = function (_isClassic) {
        var _a = this, authority = _a.authority, wasm_byte_code = _a.wasm_byte_code, instantiate_permission = _a.instantiate_permission, unpin_code = _a.unpin_code, admin = _a.admin, label = _a.label, msg = _a.msg, funds = _a.funds, source = _a.source, builder = _a.builder, code_hash = _a.code_hash;
        return {
            type: 'wasm/MsgStoreAndInstantiateContract',
            value: {
                authority: authority,
                wasm_byte_code: wasm_byte_code,
                instantiate_permission: instantiate_permission === null || instantiate_permission === void 0 ? void 0 : instantiate_permission.toAmino(),
                unpin_code: unpin_code,
                admin: admin,
                label: label,
                msg: msg,
                funds: funds.toAmino(),
                source: source,
                builder: builder,
                code_hash: code_hash,
            },
        };
    };
    MsgStoreAndInstantiateContractV1.fromProto = function (proto, _isClassic) {
        return new MsgStoreAndInstantiateContractV1(proto.authority, Buffer.from(proto.wasmByteCode).toString('base64'), proto.instantiatePermission
            ? AccessConfig_1.AccessConfig.fromProto(proto.instantiatePermission)
            : undefined, proto.unpinCode, proto.admin, proto.label, proto.msg, Coins_1.Coins.fromProto(proto.funds), proto.source, proto.builder, Buffer.from(proto.codeHash).toString('hex'));
    };
    MsgStoreAndInstantiateContractV1.prototype.toProto = function (_isClassic) {
        var _a = this, authority = _a.authority, wasm_byte_code = _a.wasm_byte_code, instantiate_permission = _a.instantiate_permission, unpin_code = _a.unpin_code, admin = _a.admin, label = _a.label, msg = _a.msg, funds = _a.funds, source = _a.source, builder = _a.builder, code_hash = _a.code_hash;
        return tx_1.MsgStoreAndInstantiateContract.fromPartial({
            authority: authority,
            wasmByteCode: Buffer.from(wasm_byte_code, 'base64'),
            instantiatePermission: instantiate_permission === null || instantiate_permission === void 0 ? void 0 : instantiate_permission.toProto(),
            unpinCode: unpin_code,
            admin: admin,
            label: label,
            msg: Buffer.from(JSON.stringify(msg), 'utf-8'),
            funds: funds.toProto(),
            source: source,
            builder: builder,
            codeHash: Buffer.from(code_hash, 'hex'),
        });
    };
    MsgStoreAndInstantiateContractV1.prototype.packAny = function (isClassic) {
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.wasm.v1.MsgStoreAndInstantiateContract',
            value: tx_1.MsgStoreAndInstantiateContract.encode(this.toProto(isClassic)).finish(),
        });
    };
    MsgStoreAndInstantiateContractV1.unpackAny = function (msgAny, isClassic) {
        return MsgStoreAndInstantiateContractV1.fromProto(tx_1.MsgStoreAndInstantiateContract.decode(msgAny.value), isClassic);
    };
    MsgStoreAndInstantiateContractV1.fromData = function (data, _isClassic) {
        var authority = data.authority, wasm_byte_code = data.wasm_byte_code, instantiate_permission = data.instantiate_permission, unpin_code = data.unpin_code, admin = data.admin, label = data.label, msg = data.msg, funds = data.funds, source = data.source, builder = data.builder, code_hash = data.code_hash;
        return new MsgStoreAndInstantiateContractV1(authority, wasm_byte_code, instantiate_permission
            ? AccessConfig_1.AccessConfig.fromData(instantiate_permission)
            : undefined, unpin_code, admin, label, msg, Coins_1.Coins.fromData(funds), source, builder, code_hash);
    };
    MsgStoreAndInstantiateContractV1.prototype.toData = function (_isClassic) {
        var _a = this, authority = _a.authority, wasm_byte_code = _a.wasm_byte_code, instantiate_permission = _a.instantiate_permission, unpin_code = _a.unpin_code, admin = _a.admin, label = _a.label, msg = _a.msg, funds = _a.funds, source = _a.source, builder = _a.builder, code_hash = _a.code_hash;
        return {
            '@type': '/cosmwasm.wasm.v1.MsgStoreAndInstantiateContract',
            authority: authority,
            wasm_byte_code: wasm_byte_code,
            instantiate_permission: instantiate_permission === null || instantiate_permission === void 0 ? void 0 : instantiate_permission.toData(),
            unpin_code: unpin_code,
            admin: admin,
            label: label,
            msg: (0, json_1.removeNull)(msg),
            funds: funds.toData(),
            source: source,
            builder: builder,
            code_hash: code_hash,
        };
    };
    return MsgStoreAndInstantiateContractV1;
}(json_1.JSONSerializable));
exports.MsgStoreAndInstantiateContractV1 = MsgStoreAndInstantiateContractV1;
//# sourceMappingURL=MsgStoreAndInstantiateContract.js.map