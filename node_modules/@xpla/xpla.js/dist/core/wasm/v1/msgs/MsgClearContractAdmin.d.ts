import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgClearAdmin as MsgClearAdminV1_pb } from '@xpla/xpla.proto/cosmwasm/wasm/v1/tx';
export declare class MsgClearContractAdminV1 extends JSONSerializable<MsgClearContractAdminV1.Amino, MsgClearContractAdminV1.Data, MsgClearContractAdminV1.Proto> {
    admin: AccAddress;
    contract: AccAddress;
    /**
     * @param admin contract admin
     * @param contract contract address
     */
    constructor(admin: AccAddress, contract: AccAddress);
    static fromAmino(data: MsgClearContractAdminV1.Amino, isClassic?: boolean): MsgClearContractAdminV1;
    toAmino(isClassic?: boolean): MsgClearContractAdminV1.Amino;
    static fromProto(data: MsgClearContractAdminV1.Proto, _?: boolean): MsgClearContractAdminV1;
    toProto(_?: boolean): MsgClearContractAdminV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgClearContractAdminV1;
    static fromData(data: MsgClearContractAdminV1.Data, _?: boolean): MsgClearContractAdminV1;
    toData(_?: boolean): MsgClearContractAdminV1.Data;
}
export declare namespace MsgClearContractAdminV1 {
    interface AminoV1 {
        type: 'wasm/MsgClearContractAdmin';
        value: {
            admin: AccAddress;
            contract: AccAddress;
        };
    }
    interface AminoV2 {
        type: 'wasm/MsgClearAdmin';
        value: {
            sender: AccAddress;
            contract: AccAddress;
        };
    }
    interface DataV2 {
        '@type': '/cosmwasm.wasm.v1.MsgClearAdmin';
        sender: string;
        contract: string;
    }
    type Amino = AminoV1 | AminoV2;
    type Data = DataV2;
    type Proto = MsgClearAdminV1_pb;
}
