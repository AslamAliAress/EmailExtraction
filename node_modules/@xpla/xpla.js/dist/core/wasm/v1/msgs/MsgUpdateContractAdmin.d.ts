import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgUpdateAdmin as MsgUpdateAdminV1_pb } from '@xpla/xpla.proto/cosmwasm/wasm/v1/tx';
export declare class MsgUpdateContractAdminV1 extends JSONSerializable<MsgUpdateContractAdminV1.Amino, MsgUpdateContractAdminV1.Data, MsgUpdateContractAdminV1.Proto> {
    admin: AccAddress;
    new_admin: AccAddress;
    contract: AccAddress;
    /**
     * @param admin contract admin
     * @param new_admin new admin
     * @param contract contract address
     */
    constructor(admin: AccAddress, new_admin: AccAddress, contract: AccAddress);
    static fromAmino(data: MsgUpdateContractAdminV1.Amino, _isClassic?: boolean): MsgUpdateContractAdminV1;
    toAmino(_isClassic?: boolean): MsgUpdateContractAdminV1.Amino;
    static fromProto(proto: MsgUpdateContractAdminV1.Proto, _isClassic?: boolean): MsgUpdateContractAdminV1;
    toProto(_isClassic?: boolean): MsgUpdateContractAdminV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgUpdateContractAdminV1;
    static fromData(data: MsgUpdateContractAdminV1.Data, _isClassic?: boolean): MsgUpdateContractAdminV1;
    toData(_isClassic?: boolean): MsgUpdateContractAdminV1.Data;
}
export declare namespace MsgUpdateContractAdminV1 {
    interface Amino {
        type: 'wasm/MsgUpdateAdmin';
        value: {
            sender: AccAddress;
            new_admin: AccAddress;
            contract: AccAddress;
        };
    }
    interface Data {
        '@type': '/cosmwasm.wasm.v1.MsgUpdateAdmin';
        sender: AccAddress;
        new_admin: AccAddress;
        contract: AccAddress;
    }
    type Proto = MsgUpdateAdminV1_pb;
}
