import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { AccessConfig } from '../AccessConfig';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgStoreCode as MsgStoreCodeV1_pb } from '@xpla/xpla.proto/cosmwasm/wasm/v1/tx';
export declare class MsgStoreCodeV1 extends JSONSerializable<MsgStoreCodeV1.Amino, MsgStoreCodeV1.Data, MsgStoreCodeV1.Proto> {
    sender: AccAddress;
    wasm_byte_code: string;
    instantiate_permission?: AccessConfig | undefined;
    /**
     * @param sender code creator
     * @param wasm_byte_code base64-encoded bytecode contents
     * @param instantiate_permission  InstantiatePermission access control to apply on contract creation, optional. v2 supported only
     */
    constructor(sender: AccAddress, wasm_byte_code: string, instantiate_permission?: AccessConfig | undefined);
    static fromAmino(data: MsgStoreCodeV1.Amino, _isClassic?: boolean): MsgStoreCodeV1;
    toAmino(_isClassic?: boolean): MsgStoreCodeV1.Amino;
    static fromProto(proto: MsgStoreCodeV1.Proto, _isClassic?: boolean): MsgStoreCodeV1;
    toProto(_isClassic?: boolean): MsgStoreCodeV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgStoreCodeV1;
    static fromData(data: MsgStoreCodeV1.Data, _isClassic?: boolean): MsgStoreCodeV1;
    toData(_isClassic?: boolean): MsgStoreCodeV1.Data;
}
export declare namespace MsgStoreCodeV1 {
    interface Amino {
        type: 'wasm/MsgStoreCode';
        value: {
            sender: AccAddress;
            wasm_byte_code: string;
            instantiate_permission?: AccessConfig.Amino;
        };
    }
    interface Data {
        '@type': '/cosmwasm.wasm.v1.MsgStoreCode';
        sender: AccAddress;
        wasm_byte_code: string;
        instantiate_permission?: AccessConfig.Data;
    }
    type Proto = MsgStoreCodeV1_pb;
}
