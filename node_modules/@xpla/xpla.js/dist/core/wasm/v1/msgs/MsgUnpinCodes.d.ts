import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgUnpinCodes as MsgUnpinCodesV1_pb } from '@xpla/xpla.proto/cosmwasm/wasm/v1/tx';
export declare class MsgUnpinCodesV1 extends JSONSerializable<MsgUnpinCodesV1.Amino, MsgUnpinCodesV1.Data, MsgUnpinCodesV1.Proto> {
    authority: AccAddress;
    code_ids: number[];
    /**
     * @param authority is the address of the governance account
     * @param code_ids references the new WASM codes
     */
    constructor(authority: AccAddress, code_ids: number[]);
    static fromAmino(data: MsgUnpinCodesV1.Amino, _isClassic?: boolean): MsgUnpinCodesV1;
    toAmino(_isClassic?: boolean): MsgUnpinCodesV1.Amino;
    static fromProto(proto: MsgUnpinCodesV1.Proto, _isClassic?: boolean): MsgUnpinCodesV1;
    toProto(_isClassic?: boolean): MsgUnpinCodesV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgUnpinCodesV1;
    static fromData(data: MsgUnpinCodesV1.Data, _isClassic?: boolean): MsgUnpinCodesV1;
    toData(_isClassic?: boolean): MsgUnpinCodesV1.Data;
}
export declare namespace MsgUnpinCodesV1 {
    interface Amino {
        type: 'wasm/MsgUnpinCodes';
        value: {
            authority: AccAddress;
            code_ids: string[];
        };
    }
    interface Data {
        '@type': '/cosmwasm.wasm.v1.MsgUnpinCodes';
        authority: AccAddress;
        code_ids: string[];
    }
    type Proto = MsgUnpinCodesV1_pb;
}
