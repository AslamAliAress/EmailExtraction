import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgSudoContract as MsgSudoContractV1_pb } from '@xpla/xpla.proto/cosmwasm/wasm/v1/tx';
export declare class MsgSudoContractV1 extends JSONSerializable<MsgSudoContractV1.Amino, MsgSudoContractV1.Data, MsgSudoContractV1.Proto> {
    authority: AccAddress;
    contract: AccAddress;
    msg: object | string;
    /**
     * @param sender is the that actor that signed the messages
     * @param code_id references the stored WASM code
     * @param new_instantiate_permission is the new access control
     */
    constructor(authority: AccAddress, contract: AccAddress, msg: object | string);
    static fromAmino(data: MsgSudoContractV1.Amino, _isClassic?: boolean): MsgSudoContractV1;
    toAmino(_isClassic?: boolean): MsgSudoContractV1.Amino;
    static fromProto(proto: MsgSudoContractV1.Proto, _isClassic?: boolean): MsgSudoContractV1;
    toProto(_isClassic?: boolean): MsgSudoContractV1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgSudoContractV1;
    static fromData(data: MsgSudoContractV1.Data, _isClassic?: boolean): MsgSudoContractV1;
    toData(_isClassic?: boolean): MsgSudoContractV1.Data;
}
export declare namespace MsgSudoContractV1 {
    interface Amino {
        type: 'wasm/MsgSudoContract';
        value: {
            authority: AccAddress;
            contract: AccAddress;
            msg: object | string;
        };
    }
    interface Data {
        '@type': '/cosmwasm.wasm.v1.MsgSudoContract';
        authority: AccAddress;
        contract: AccAddress;
        msg: object | string;
    }
    type Proto = MsgSudoContractV1_pb;
}
