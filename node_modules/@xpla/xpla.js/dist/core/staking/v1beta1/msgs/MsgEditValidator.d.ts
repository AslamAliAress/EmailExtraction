import { JSONSerializable } from '../../../../util/json';
import { Dec, Int } from '../../../numeric';
import { ValAddress } from '../../../bech32';
import { ValidatorV1B1 } from '../Validator';
import { Any } from '@xpla/xpla.proto/google/protobuf/any';
import { MsgEditValidator as MsgEditValidatorV1B1_pb } from '@xpla/xpla.proto/cosmos/staking/v1beta1/tx';
/**
 * A validator can edit its delegate information, such as moniker, website, commission
 * rate, etc.
 *
 * You must use special or sentinel values to inform that you want to leave the current
 * field untouched. For `Description`,` you should start with [[MsgEditValidatorV1B1.DESC_DO_NOT_MODIFY]] and
 * change each field you wish to modify individually.
 */
export declare class MsgEditValidatorV1B1 extends JSONSerializable<MsgEditValidatorV1B1.Amino, MsgEditValidatorV1B1.Data, MsgEditValidatorV1B1.Proto> {
    description: ValidatorV1B1.Description;
    validator_address: ValAddress;
    commission_rate?: Dec | undefined;
    min_self_delegation?: Int | undefined;
    /**
     * @param Description new description to apply
     * @param address new address to apply
     * @param commission_rate new commission rates to apply
     * @param min_self_delegation new min self delegation
     */
    constructor(description: ValidatorV1B1.Description, validator_address: ValAddress, commission_rate?: Dec | undefined, min_self_delegation?: Int | undefined);
    static fromAmino(data: MsgEditValidatorV1B1.Amino, _isClassic?: boolean): MsgEditValidatorV1B1;
    toAmino(isClassic?: boolean): MsgEditValidatorV1B1.Amino;
    static fromProto(data: MsgEditValidatorV1B1.Proto, _isClassic?: boolean): MsgEditValidatorV1B1;
    toProto(_isClassic?: boolean): MsgEditValidatorV1B1.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgEditValidatorV1B1;
    static fromData(data: MsgEditValidatorV1B1.Data, _isClassic?: boolean): MsgEditValidatorV1B1;
    toData(_isClassic?: boolean): MsgEditValidatorV1B1.Data;
}
export declare namespace MsgEditValidatorV1B1 {
    const DESC_DO_NOT_MODIFY: ValidatorV1B1.Description.Amino;
    interface Amino {
        type: 'staking/MsgEditValidator' | 'cosmos-sdk/MsgEditValidator';
        value: {
            description: ValidatorV1B1.Description.Amino;
            validator_address: ValAddress;
            commission_rate?: string;
            min_self_delegation?: string;
        };
    }
    interface Data {
        '@type': '/cosmos.staking.v1beta1.MsgEditValidator';
        description: ValidatorV1B1.Description.Data;
        validator_address: ValAddress;
        commission_rate?: string;
        min_self_delegation?: string;
    }
    type Proto = MsgEditValidatorV1B1_pb;
}
