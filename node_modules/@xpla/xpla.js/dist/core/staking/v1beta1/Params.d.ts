import { JSONSerializable } from '../../../util/json';
import { Dec, Denom, Duration, Numeric } from '../../../core';
import { Params as StakingParamsV1B1_pb } from '@xpla/xpla.proto/cosmos/staking/v1beta1/staking';
export declare class StakingParamsV1B1 extends JSONSerializable<StakingParamsV1B1.Amino, StakingParamsV1B1.Data, StakingParamsV1B1.Proto> {
    unbonding_time: Duration | undefined;
    max_validators: number;
    max_entries: number;
    historical_entries: number;
    bond_denom: Denom;
    min_commission_rate: Dec;
    /**
     * @param unbonding_time is the time duration of unbonding
     * @param max_validators is the maximum number of validators
     * @param max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio)
     * @param historical_entries is the number of historical entries to persist
     * @param bond_denom defines the bondable coin denomination
     * @param min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
     */
    constructor(unbonding_time: Duration | undefined, max_validators: number, max_entries: number, historical_entries: number, bond_denom: Denom, min_commission_rate: Numeric.Input);
    static fromAmino(data: StakingParamsV1B1.Amino, _?: boolean): StakingParamsV1B1;
    toAmino(_?: boolean): StakingParamsV1B1.Amino;
    static fromData(data: StakingParamsV1B1.Data, _?: boolean): StakingParamsV1B1;
    toData(_?: boolean): StakingParamsV1B1.Data;
    static fromProto(proto: StakingParamsV1B1.Proto, _?: boolean): StakingParamsV1B1;
    toProto(_?: boolean): StakingParamsV1B1.Proto;
}
export declare namespace StakingParamsV1B1 {
    interface Amino {
        unbonding_time: string | undefined;
        max_validators: number | undefined;
        max_entries: number | undefined;
        historical_entries: number | undefined;
        bond_denom: string | undefined;
        min_commission_rate: string | undefined;
    }
    interface Data {
        '@type': '/cosmos.staking.v1beta1.Params';
        unbonding_time: object | undefined;
        max_validators: number;
        max_entries: number;
        historical_entries: number;
        bond_denom: string;
        min_commission_rate: string;
    }
    type Proto = StakingParamsV1B1_pb;
}
