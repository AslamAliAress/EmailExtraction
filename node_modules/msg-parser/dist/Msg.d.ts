import { AbstractMessage } from "./AbstractMessage";
import { CompoundFile, StreamDirectoryEntry } from "compound-binary-file-js";
import { PropertiesStream } from "./property/PropertiesStream";
import { NamedPropertyMappingStorage } from "./nameid_mapping/NamedPropertyMappingStorage";
import { EmbeddedMessage } from "./EmbeddedMessage";
import { MessageStorage } from "./MessageStorage";
export declare class Msg extends AbstractMessage {
    static readonly ATTACHMENT_STORAGE_PREFIX = "__attach_version1.0";
    private compoundFile;
    constructor(compoundFile: CompoundFile);
    static fromBytes(bytes: number[]): Msg;
    static fromUint8Array(bytes: Uint8Array): Msg;
    protected createPropertiesStream(stream: StreamDirectoryEntry): PropertiesStream;
    getNamedPropertyMappingStorage(): NamedPropertyMappingStorage;
    private static namedPropertyMappingStorage;
    asBytes(): number[];
    extractEmbeddedMessage(embeddedMessage: EmbeddedMessage): Msg;
    private copyConsumer;
    embeddedMessages(): EmbeddedMessage[];
    static embeddedMessages(messageStorage: MessageStorage, namedPropertyMappingStorage: NamedPropertyMappingStorage): EmbeddedMessage[];
}
