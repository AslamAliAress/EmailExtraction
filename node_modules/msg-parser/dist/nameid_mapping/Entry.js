"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var IndexAndKindInformation_1 = require("./IndexAndKindInformation");
var Long = __importStar(require("long"));
var PropertySet_1 = require("../property/PropertySet");
var Entry = /** @class */ (function () {
    function Entry(bytes) {
        this.bytes = bytes;
        this.idOrOffset = Long.fromBytesLE(bytes.slice(0, 4)).toNumber();
        this.indexAndKindInformation = new IndexAndKindInformation_1.IndexAndKindInformation(bytes.slice(4, 8));
    }
    Entry.prototype.getPropertyName = function (stringStream) {
        return stringStream.getPropertyNameAt(this.idOrOffset);
    };
    Entry.prototype.getPropertyNameIdentifierOrOffsetOrChecksum = function () {
        return this.idOrOffset;
    };
    /**
     * @deprecated The method should not be used
     */
    Entry.prototype.getGuid = function (guidStream) {
        return guidStream.getGuidAt(this.indexAndKindInformation.getGuidIndex());
    };
    Entry.prototype.getPropertySetGuid = function (guidStream) {
        return guidStream.getGuidAt(this.indexAndKindInformation.getGuidIndex());
    };
    Entry.prototype.getPropertySet = function (guidStream) {
        return PropertySet_1.PropertySet.forUUID(this.getPropertySetGuid(guidStream));
    };
    Entry.prototype.getPropertyIndex = function () {
        return this.indexAndKindInformation.getPropertyIndex();
    };
    Entry.prototype.isString = function () {
        return this.indexAndKindInformation.getPropertyKind() === IndexAndKindInformation_1.PropertyKind.STRING;
    };
    Entry.prototype.isNumeric = function () {
        return this.indexAndKindInformation.getPropertyKind() === IndexAndKindInformation_1.PropertyKind.NUMERIC;
    };
    return Entry;
}());
exports.Entry = Entry;
//# sourceMappingURL=Entry.js.map